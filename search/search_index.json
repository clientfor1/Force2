{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Fusion is a game engine for creating graphical applications using the Pygame library and the programming language Python. It provides a simple coding interface for creating windows, rendering graphics, and handling user input. It is and engine to create games fast and easy!</p>"},{"location":"#repo","title":"Repo","text":"<p>Our Github repo is here</p>"},{"location":"#table-of-contents","title":"\ud83d\udddc\ufe0f Table of Contents","text":"<p>Welcome to fusion engine documentation! We have seperated the documentation in some parts: main, api, wiki and tutorial.  Wiki is made if you need to know what a function does. Api is made if you need to know if a function exist and what arguments it takes, and in tutorials we made some tutorials for you to better understand fusion!</p>"},{"location":"#setting-up","title":"\ud83d\udcbb Setting up","text":"<p>To install it run this:</p> <pre><code>  pip install fusion-engine\n</code></pre> <p>Then import:</p> <pre><code>  import fusionengine as fusion\n</code></pre> <p>And your done!</p>"},{"location":"#todo-list-and-changelog","title":"Todo list and changelog","text":"<ul> <li>v4</li> <li>v3</li> </ul>"},{"location":"#wiki","title":"Wiki","text":"<ul> <li>Setting up</li> <li>Wiki</li> </ul>"},{"location":"#api","title":"Api","text":"<ul> <li>Setting up</li> <li>API</li> </ul>"},{"location":"#tutorials","title":"Tutorials","text":"<ul> <li>Tutorials</li> </ul>"},{"location":"#v3","title":"v3","text":""},{"location":"#about","title":"About","text":"<p>The wiki, api and tutorials to the old v3 version of fusion, which is not being under development</p>"},{"location":"#wiki_1","title":"Wiki","text":"<ul> <li>Setting up</li> <li>Wiki</li> </ul>"},{"location":"#api_1","title":"Api","text":"<ul> <li>Setting up</li> <li>API</li> </ul>"},{"location":"#tutorials_1","title":"Tutorials","text":"<ul> <li>Tutorials</li> </ul>"},{"location":"#setting-up-v3","title":"\ud83d\udcbb Setting up v3","text":"<p>To install it run this:</p> <pre><code>  pip install fusion-engine\n</code></pre> <p>Then import:</p> <pre><code>  import fusionengine as engine\n</code></pre> <p>And after that you need to create a object of our engine to run functions of it:</p> <pre><code>  main = engine.Main()\n</code></pre>"},{"location":"changelog/v3/","title":"V3","text":""},{"location":"changelog/v3/#300-todochangelog","title":"3.0.0 Todo/Changelog","text":"<ul> <li>[x] Engine</li> <li>[x] Window<ul> <li>[x] Create window</li> <li>[x] Get data from window</li> </ul> </li> <li>[x] Draw shapes</li> <li>[x] Draw images</li> <li>[x] Input</li> <li>[x] Storage system</li> <li>[x] Rendering options</li> <li>[x] Delta-Time</li> <li>[x] Pip package and SetupTools</li> <li>[x] Cython<ul> <li>[x] Implement cython for extra speed</li> <li>[x] Dev version without cython</li> </ul> </li> <li>[x] Vectors (stores x and y coordinates)<ul> <li>[x] Create vector</li> </ul> </li> <li>[x] GUI library<ul> <li>[x] Text</li> <li>[x] Drawing (Build in draw function)</li> <li>[x] Buttons</li> </ul> </li> <li>[x] Sound system<ul> <li>[x] Sound player</li> <li>[x] File support</li> <li>[x] And more...</li> </ul> </li> </ul>"},{"location":"changelog/v4/","title":"V4","text":""},{"location":"changelog/v4/#400-todochangelog","title":"4.0.0 Todo/Changelog","text":"<ul> <li>[x] Rewrite codebase</li> <li>[x] Cleaner api</li> <li>[x] Rewrite documentation</li> <li>[x] Better documentation</li> <li>[x] Easier usage</li> </ul>"},{"location":"changelog/v4/#410-todochangelog","title":"4.1.0 Todo/Changelog","text":"<ul> <li>[x] Scenes managment</li> <li>[x] Creating different scenes</li> <li>[x] Scene manager<ul> <li>[x] Scenes classes</li> <li>[x] Main scene class (SceneManager)</li> <li>[ ] Docs for it</li> </ul> </li> <li>[x] Paths Rewrite</li> </ul>"},{"location":"changelog/v4/#420-todochangelog","title":"4.2.0 Todo/Changelog","text":"<ul> <li>[ ] New way of a applcation (Application class)</li> <li>[ ] Inheritance based</li> <li>[ ] Build in loop</li> <li>[ ] Make this optional and not the main way</li> <li>[ ] Animation system</li> <li>[ ] Load images</li> <li>[ ] Play animation</li> </ul>"},{"location":"v3/api/","title":"Api","text":"<p>Welcome to our api! Here you will find all functions that exist in fusion engine and what arguments they get. We have seperated the api in some parts, like main api, color api and more. You choose one you need. Can't find something? Then try looking in the main api/ So have luck!</p>"},{"location":"v3/api/#table-of-contents","title":"Table of contents","text":"<ul> <li>Main API</li> <li>Color API</li> <li>Font API</li> <li>Key API</li> </ul>"},{"location":"v3/api/api/","title":"API","text":""},{"location":"v3/api/api/#window","title":"Window","text":""},{"location":"v3/api/api/#mainwindow","title":"main.window","text":"<pre><code>new_window(title: str, width: int, height: int)\nchange_icon(image_path: str)\nloop(your_loop_func)\nset_fps(self, fps: int)\nforce_quit()\n</code></pre>"},{"location":"v3/api/api/#event","title":"Event","text":""},{"location":"v3/api/api/#mainevent","title":"main.event","text":"<pre><code>key_down(key)\nkey_down_once(key)\n</code></pre>"},{"location":"v3/api/api/#draw","title":"Draw","text":""},{"location":"v3/api/api/#maindraw","title":"main.draw","text":"<pre><code>draw_line(window, x1: int, y1: int, x2: int, y2: int, color: tuple)\ndraw_line_rect(window, x: int, y: int, width: int, height: int, color: tuple)\ndraw_rect(window, x: int, y: int, width: int, height: int, color: tuple)\ndraw_own_rect(window, rect)\nset_background_color(window, color: tuple)\n</code></pre>"},{"location":"v3/api/api/#image","title":"Image","text":""},{"location":"v3/api/api/#mainimage","title":"main.image","text":"<pre><code>open_image(window, image_path: str, x: int, y: int, width: int, height: int)\ndraw_image(image)\n</code></pre>"},{"location":"v3/api/api/#body","title":"Body","text":""},{"location":"v3/api/api/#mainbody","title":"main.body","text":"<pre><code>Entity(window, x: int, y: int, width: int, height: int)\n</code></pre>"},{"location":"v3/api/api/#shape","title":"Shape","text":""},{"location":"v3/api/api/#mainshape","title":"main.shape","text":"<pre><code>new_rect(x: int, y: int, width: int, height: int, color: tuple)\nnew_rect_button(x, y, width, height)\n</code></pre>"},{"location":"v3/api/api/#ui","title":"UI","text":""},{"location":"v3/api/api/#mainui","title":"main.ui","text":""},{"location":"v3/api/api/#mainuibutton","title":"main.ui.button","text":"<pre><code>new_button(window: windowfe._CustomRenderer, rect: shape._CustomShape, text: str)\n</code></pre> <p>Some button functions:</p> <pre><code>your_button.button_pressed() -&gt; bool\n</code></pre>"},{"location":"v3/api/api/#mainuitext","title":"main.ui.text","text":"<pre><code>    def print_text(window, text: str, x: int, y: int, font_path: str, font_size: int, color: tuple)\n</code></pre>"},{"location":"v3/api/api/#debug","title":"Debug","text":""},{"location":"v3/api/api/#maindebug","title":"main.debug","text":"<pre><code>DEBUGIMAGE\n</code></pre>"},{"location":"v3/api/api/#vector","title":"Vector","text":""},{"location":"v3/api/api/#mainvector","title":"main.vector","text":"<pre><code>new_vector2d(x: int, y: int)\n</code></pre>"},{"location":"v3/api/api/#sound","title":"Sound","text":""},{"location":"v3/api/api/#mainsound","title":"main.sound","text":"<pre><code>load_sound(sound_path: str)\nplay_background_music(sound_path: str)\nset_volume_global(volume)\n</code></pre>"},{"location":"v3/api/api/#loaded-sound-api","title":"Loaded sound API","text":"<pre><code>play()\nstop()\nget_volume()\nset_volume(volume: int)\nfadeout(time: str)\n</code></pre>"},{"location":"v3/api/color/","title":"Color API","text":""},{"location":"v3/api/color/#color","title":"Color","text":""},{"location":"v3/api/color/#maincolor","title":"main.color","text":"<pre><code>BLUE = (0, 0, 255, 255)\nBLACK = (0, 0, 0, 255)\nWHITE = (255, 255, 255, 255)\nGREEN = (255, 255, 255, 255)\nRED = (255, 0, 0, 255)\nYELLOW = (255, 255, 0, 255)\nPURPLE = (255, 0, 255, 255)\nCYAN = (0, 255, 255, 255)\nORANGE = (255, 165, 0, 255)\nGRAY = (128, 128, 128, 255)\nBROWN = (165, 42, 42, 255)\nPINK = (255, 192, 203, 255)\nMAGENTA = (255, 0, 255, 255)\nSILVER = (192, 192, 192, 255)\nGOLD = (255, 215, 0, 255)\nBRONZE = (205, 127, 50, 255)\nLIME = (0, 255, 0, 255)\nOLIVE = (128, 128, 0, 255)\nTEAL = (0, 128, 128, 255)\nNAVY = (0, 0, 128, 255)\nMAROON = (128, 0, 0, 255)\nINDIGO = (75, 0, 130, 255)\nTURQUOISE = (64, 224, 208, 255)\nVIOLET = (238, 130, 238, 255)\nAQUA = (0, 255, 255, 255)\nTAN = (210, 180, 140, 255)\nBEIGE = (245, 245, 220, 255)\nIVORY = (255, 255, 240, 255)\nLAVENDER = (230, 230, 250, 255)\nMINT = (189, 252, 201, 255)\nSALMON = (250, 128, 114, 255)\nSCARLET = (255, 36, 0, 255)\nTEAL = (0, 128, 128, 255)\nTOMATO = (255, 99, 71, 255)\nCRIMSON = (220, 20, 60, 255)\nAZURE = (0, 128, 255, 255)\n</code></pre>"},{"location":"v3/api/color/#colortools","title":"Colortools","text":""},{"location":"v3/api/color/#maincolortools","title":"main.colortools","text":"<pre><code>hex_to_rgba(hex)\n</code></pre>"},{"location":"v3/api/fonts/","title":"Font API","text":""},{"location":"v3/api/fonts/#mainfont","title":"main.font","text":"<pre><code>NUNITO_LIGHT\nSAIRACONDENSED_EXTRABOLD\n</code></pre>"},{"location":"v3/api/keys/","title":"Keys API","text":""},{"location":"v3/api/keys/#mainkeys","title":"main.keys","text":"<pre><code>    KEY_UNKNOWN = sdl2.SDLK_UNKNOWN\n    KEY_RETURN = sdl2.SDLK_RETURN\n    KEY_ESCAPE = sdl2.SDLK_ESCAPE\n    KEY_BACKSPACE = sdl2.SDLK_BACKSPACE\n    KEY_TAB = sdl2.SDLK_TAB\n    KEY_SPACE = sdl2.SDLK_SPACE\n    KEY_EXCLAIM = sdl2.SDLK_EXCLAIM\n    KEY_QUOTEDBL = sdl2.SDLK_QUOTEDBL\n    KEY_HASH = sdl2.SDLK_HASH\n    KEY_PERCENT = sdl2.SDLK_PERCENT\n    KEY_DOLLAR = sdl2.SDLK_DOLLAR\n    KEY_AMPERSAND = sdl2.SDLK_AMPERSAND\n    KEY_QUOTE = sdl2.SDLK_QUOTE\n    KEY_LEFTPAREN = sdl2.SDLK_LEFTPAREN\n    KEY_RIGHTPAREN = sdl2.SDLK_RIGHTPAREN\n    KEY_ASTERISK = sdl2.SDLK_ASTERISK\n    KEY_PLUS = sdl2.SDLK_PLUS\n    KEY_COMMA = sdl2.SDLK_COMMA\n    KEY_MINUS = sdl2.SDLK_MINUS\n    KEY_PERIOD = sdl2.SDLK_PERIOD\n    KEY_SLASH = sdl2.SDLK_SLASH\n    KEY_0 = sdl2.SDLK_0\n    KEY_1 = sdl2.SDLK_1\n    KEY_2 = sdl2.SDLK_2\n    KEY_3 = sdl2.SDLK_3\n    KEY_4 = sdl2.SDLK_4\n    KEY_5 = sdl2.SDLK_5\n    KEY_6 = sdl2.SDLK_6\n    KEY_7 = sdl2.SDLK_7\n    KEY_8 = sdl2.SDLK_8\n    KEY_9 = sdl2.SDLK_9\n    KEY_COLON = sdl2.SDLK_COLON\n    KEY_SEMICOLON = sdl2.SDLK_SEMICOLON\n    KEY_LESS = sdl2.SDLK_LESS\n    KEY_EQUALS = sdl2.SDLK_EQUALS\n    KEY_GREATER = sdl2.SDLK_GREATER\n    KEY_QUESTION = sdl2.SDLK_QUESTION\n    KEY_AT = sdl2.SDLK_AT\n    KEY_LEFTBRACKET = sdl2.SDLK_LEFTBRACKET\n    KEY_BACKSLASH = sdl2.SDLK_BACKSLASH\n    KEY_RIGHTBRACKET = sdl2.SDLK_RIGHTBRACKET\n    KEY_CARET = sdl2.SDLK_CARET\n    KEY_UNDERSCORE = sdl2.SDLK_UNDERSCORE\n    KEY_BACKQUOTE = sdl2.SDLK_BACKQUOTE\n    KEY_a = sdl2.SDLK_a\n    KEY_b = sdl2.SDLK_b\n    KEY_c = sdl2.SDLK_c\n    KEY_d = sdl2.SDLK_d\n    KEY_e = sdl2.SDLK_e\n    KEY_f = sdl2.SDLK_f\n    KEY_g = sdl2.SDLK_g\n    KEY_h = sdl2.SDLK_h\n    KEY_i = sdl2.SDLK_i\n    KEY_j = sdl2.SDLK_j\n    KEY_k = sdl2.SDLK_k\n    KEY_l = sdl2.SDLK_l\n    KEY_m = sdl2.SDLK_m\n    KEY_n = sdl2.SDLK_n\n    KEY_o = sdl2.SDLK_o\n    KEY_p = sdl2.SDLK_p\n    KEY_q = sdl2.SDLK_q\n    KEY_r = sdl2.SDLK_r\n    KEY_s = sdl2.SDLK_s\n    KEY_t = sdl2.SDLK_t\n    KEY_u = sdl2.SDLK_u\n    KEY_v = sdl2.SDLK_v\n    KEY_w = sdl2.SDLK_w\n    KEY_x = sdl2.SDLK_x\n    KEY_y = sdl2.SDLK_y\n    KEY_z = sdl2.SDLK_z\n    KEY_CAPSLOCK = sdl2.SDLK_CAPSLOCK\n    KEY_F1 = sdl2.SDLK_F1\n    KEY_F2 = sdl2.SDLK_F2\n    KEY_F3 = sdl2.SDLK_F3\n    KEY_F4 = sdl2.SDLK_F4\n    KEY_F5 = sdl2.SDLK_F5\n    KEY_F6 = sdl2.SDLK_F6\n    KEY_F7 = sdl2.SDLK_F7\n    KEY_F8 = sdl2.SDLK_F8\n    KEY_F9 = sdl2.SDLK_F9\n    KEY_F10 = sdl2.SDLK_F10\n    KEY_F11 = sdl2.SDLK_F11\n    KEY_F12 = sdl2.SDLK_F12\n    KEY_PRINTSCREEN = sdl2.SDLK_PRINTSCREEN\n    KEY_SCROLLLOCK = sdl2.SDLK_SCROLLLOCK\n    KEY_PAUSE = sdl2.SDLK_PAUSE\n    KEY_INSERT = sdl2.SDLK_INSERT\n    KEY_HOME = sdl2.SDLK_HOME\n    KEY_PAGEUP = sdl2.SDLK_PAGEUP\n    KEY_DELETE = sdl2.SDLK_DELETE\n    KEY_END = sdl2.SDLK_END\n    KEY_PAGEDOWN = sdl2.SDLK_PAGEDOWN\n    KEY_RIGHT = sdl2.SDLK_RIGHT\n    KEY_LEFT = sdl2.SDLK_LEFT\n    KEY_DOWN = sdl2.SDLK_DOWN\n    KEY_UP = sdl2.SDLK_UP\n    KEY_NUMLOCKCLEAR = sdl2.SDLK_NUMLOCKCLEAR\n    KEY_KP_DIVIDE = sdl2.SDLK_KP_DIVIDE\n    KEY_KP_MULTIPLY = sdl2.SDLK_KP_MULTIPLY\n    KEY_KP_MINUS = sdl2.SDLK_KP_MINUS\n    KEY_KP_PLUS = sdl2.SDLK_KP_PLUS\n    KEY_KP_ENTER = sdl2.SDLK_KP_ENTER\n    KEY_KP_1 = sdl2.SDLK_KP_1\n    KEY_KP_2 = sdl2.SDLK_KP_2\n    KEY_KP_3 = sdl2.SDLK_KP_3\n    KEY_KP_4 = sdl2.SDLK_KP_4\n    KEY_KP_5 = sdl2.SDLK_KP_5\n    KEY_KP_6 = sdl2.SDLK_KP_6\n    KEY_KP_7 = sdl2.SDLK_KP_7\n    KEY_KP_8 = sdl2.SDLK_KP_8\n    KEY_KP_9 = sdl2.SDLK_KP_9\n    KEY_KP_0 = sdl2.SDLK_KP_0\n    KEY_KP_PERIOD = sdl2.SDLK_KP_PERIOD\n    KEY_APPLICATION = sdl2.SDLK_APPLICATION\n    KEY_POWER = sdl2.SDLK_POWER\n    KEY_KP_EQUALS = sdl2.SDLK_KP_EQUALS\n    KEY_F13 = sdl2.SDLK_F13\n    KEY_F14 = sdl2.SDLK_F14\n    KEY_F15 = sdl2.SDLK_F15\n    KEY_F16 = sdl2.SDLK_F16\n    KEY_F17 = sdl2.SDLK_F17\n    KEY_F18 = sdl2.SDLK_F18\n    KEY_F19 = sdl2.SDLK_F19\n    KEY_F20 = sdl2.SDLK_F20\n    KEY_F21 = sdl2.SDLK_F21\n    KEY_F22 = sdl2.SDLK_F22\n    KEY_F23 = sdl2.SDLK_F23\n    KEY_F24 = sdl2.SDLK_F24\n    KEY_EXECUTE = sdl2.SDLK_EXECUTE\n    KEY_HELP = sdl2.SDLK_HELP\n    KEY_MENU = sdl2.SDLK_MENU\n    KEY_SELECT = sdl2.SDLK_SELECT\n    KEY_STOP = sdl2.SDLK_STOP\n    KEY_AGAIN = sdl2.SDLK_AGAIN\n    KEY_UNDO = sdl2.SDLK_UNDO\n    KEY_CUT = sdl2.SDLK_CUT\n    KEY_COPY = sdl2.SDLK_COPY\n    KEY_PASTE = sdl2.SDLK_PASTE\n    KEY_FIND = sdl2.SDLK_FIND\n    KEY_MUTE = sdl2.SDLK_MUTE\n    KEY_VOLUMEUP = sdl2.SDLK_VOLUMEUP\n    KEY_VOLUMEDOWN = sdl2.SDLK_VOLUMEDOWN\n    KEY_KP_COMMA = sdl2.SDLK_KP_COMMA\n    KEY_KP_EQUALSAS400 = sdl2.SDLK_KP_EQUALSAS400\n    KEY_ALTERASE = sdl2.SDLK_ALTERASE\n    KEY_SYSREQ = sdl2.SDLK_SYSREQ\n    KEY_CANCEL = sdl2.SDLK_CANCEL\n    KEY_CLEAR = sdl2.SDLK_CLEAR\n    KEY_PRIOR = sdl2.SDLK_PRIOR\n    KEY_RETURN2 = sdl2.SDLK_RETURN2\n    KEY_SEPARATOR = sdl2.SDLK_SEPARATOR\n    KEY_OUT = sdl2.SDLK_OUT\n    KEY_OPER = sdl2.SDLK_OPER\n    KEY_CLEARAGAIN = sdl2.SDLK_CLEARAGAIN\n    KEY_CRSEL = sdl2.SDLK_CRSEL\n    KEY_EXSEL = sdl2.SDLK_EXSEL\n    KEY_KP_00 = sdl2.SDLK_KP_00\n    KEY_KP_000 = sdl2.SDLK_KP_000\n    KEY_THOUSANDSSEPARATOR = sdl2.SDLK_THOUSANDSSEPARATOR\n    KEY_DECIMALSEPARATOR = sdl2.SDLK_DECIMALSEPARATOR\n    KEY_CURRENCYUNIT = sdl2.SDLK_CURRENCYUNIT\n    KEY_CURRENCYSUBUNIT = sdl2.SDLK_CURRENCYSUBUNIT\n    KEY_KP_LEFTPAREN = sdl2.SDLK_KP_LEFTPAREN\n    KEY_KP_RIGHTPAREN = sdl2.SDLK_KP_RIGHTPAREN\n    KEY_KP_LEFTBRACE = sdl2.SDLK_KP_LEFTBRACE\n    KEY_KP_RIGHTBRACE = sdl2.SDLK_KP_RIGHTBRACE\n    KEY_KP_TAB = sdl2.SDLK_KP_TAB\n    KEY_KP_BACKSPACE = sdl2.SDLK_KP_BACKSPACE\n    KEY_KP_A = sdl2.SDLK_KP_A\n    KEY_KP_B = sdl2.SDLK_KP_B\n    KEY_KP_C = sdl2.SDLK_KP_C\n    KEY_KP_D = sdl2.SDLK_KP_D\n    KEY_KP_E = sdl2.SDLK_KP_E\n    KEY_KP_F = sdl2.SDLK_KP_F\n    KEY_KP_XOR = sdl2.SDLK_KP_XOR\n    KEY_KP_POWER = sdl2.SDLK_KP_POWER\n    KEY_KP_PERCENT = sdl2.SDLK_KP_PERCENT\n    KEY_KP_LESS = sdl2.SDLK_KP_LESS\n    KEY_KP_GREATER = sdl2.SDLK_KP_GREATER\n    KEY_KP_AMPERSAND = sdl2.SDLK_KP_AMPERSAND\n    KEY_KP_DBLAMPERSAND = sdl2.SDLK_KP_DBLAMPERSAND\n    KEY_KP_VERTICALBAR = sdl2.SDLK_KP_VERTICALBAR\n    KEY_KP_DBLVERTICALBAR = sdl2.SDLK_KP_DBLVERTICALBAR\n    KEY_KP_COLON = sdl2.SDLK_KP_COLON\n    KEY_KP_HASH = sdl2.SDLK_KP_HASH\n    KEY_KP_SPACE = sdl2.SDLK_KP_SPACE\n    KEY_KP_AT = sdl2.SDLK_KP_AT\n    KEY_KP_EXCLAM = sdl2.SDLK_KP_EXCLAM\n    KEY_KP_MEMSTORE = sdl2.SDLK_KP_MEMSTORE\n    KEY_KP_MEMRECALL = sdl2.SDLK_KP_MEMRECALL\n    KEY_KP_MEMCLEAR = sdl2.SDLK_KP_MEMCLEAR\n    KEY_KP_MEMADD = sdl2.SDLK_KP_MEMADD\n    KEY_KP_MEMSUBTRACT = sdl2.SDLK_KP_MEMSUBTRACT\n    KEY_KP_MEMMULTIPLY = sdl2.SDLK_KP_MEMMULTIPLY\n    KEY_KP_MEMDIVIDE = sdl2.SDLK_KP_MEMDIVIDE\n    KEY_KP_PLUSMINUS = sdl2.SDLK_KP_PLUSMINUS\n    KEY_KP_CLEAR = sdl2.SDLK_KP_CLEAR\n    KEY_KP_CLEARENTRY = sdl2.SDLK_KP_CLEARENTRY\n    KEY_KP_BINARY = sdl2.SDLK_KP_BINARY\n    KEY_KP_OCTAL = sdl2.SDLK_KP_OCTAL\n    KEY_KP_DECIMAL = sdl2.SDLK_KP_DECIMAL\n    KEY_KP_HEXADECIMAL = sdl2.SDLK_KP_HEXADECIMAL\n    KEY_LCTRL = sdl2.SDLK_LCTRL\n    KEY_LSHIFT = sdl2.SDLK_LSHIFT\n    KEY_LALT = sdl2.SDLK_LALT\n    KEY_LGUI = sdl2.SDLK_LGUI\n    KEY_RCTRL = sdl2.SDLK_RCTRL\n    KEY_RSHIFT = sdl2.SDLK_RSHIFT\n    KEY_RALT = sdl2.SDLK_RALT\n    KEY_RGUI = sdl2.SDLK_RGUI\n    KEY_MODE = sdl2.SDLK_MODE\n    KEY_AUDIONEXT = sdl2.SDLK_AUDIONEXT\n    KEY_AUDIOPREV = sdl2.SDLK_AUDIOPREV\n    KEY_AUDIOSTOP = sdl2.SDLK_AUDIOSTOP\n    KEY_AUDIOPLAY = sdl2.SDLK_AUDIOPLAY\n    KEY_AUDIOMUTE = sdl2.SDLK_AUDIOMUTE\n    KEY_MEDIASELECT = sdl2.SDLK_MEDIASELECT\n    KEY_WWW = sdl2.SDLK_WWW\n    KEY_MAIL = sdl2.SDLK_MAIL\n    KEY_CALCULATOR = sdl2.SDLK_CALCULATOR\n    KEY_COMPUTER = sdl2.SDLK_COMPUTER\n    KEY_AC_SEARCH = sdl2.SDLK_AC_SEARCH\n    KEY_AC_HOME = sdl2.SDLK_AC_HOME\n    KEY_AC_BACK = sdl2.SDLK_AC_BACK\n    KEY_AC_FORWARD = sdl2.SDLK_AC_FORWARD\n    KEY_AC_STOP = sdl2.SDLK_AC_STOP\n    KEY_AC_REFRESH = sdl2.SDLK_AC_REFRESH\n    KEY_AC_BOOKMARKS = sdl2.SDLK_AC_BOOKMARKS\n    KEY_BRIGHTNESSDOWN = sdl2.SDLK_BRIGHTNESSDOWN\n    KEY_BRIGHTNESSUP = sdl2.SDLK_BRIGHTNESSUP\n    KEY_DISPLAYSWITCH = sdl2.SDLK_DISPLAYSWITCH\n    KEY_KBDILLUMTOGGLE = sdl2.SDLK_KBDILLUMTOGGLE\n    KEY_KBDILLUMDOWN = sdl2.SDLK_KBDILLUMDOWN\n    KEY_KBDILLUMUP = sdl2.SDLK_KBDILLUMUP\n    KEY_EJECT = sdl2.SDLK_EJECT\n    KEY_SLEEP = sdl2.SDLK_SLEEP\n</code></pre>"},{"location":"v3/api/math/","title":"Math API","text":""},{"location":"v3/api/math/#mainmath","title":"main.math","text":"<pre><code>PI = 3.141592653589793238462643383279502884197\nEULERNUMBER = 2.718281828459045\nmain.math.FLOOR(3.4)\n</code></pre>"},{"location":"v3/tutorials/","title":"Fusion engine tutorials","text":""},{"location":"v3/tutorials/#unveiling-the-tutorials","title":"Unveiling the Tutorials","text":"<p>Welcome to our tutorials! Here you will find step by step tutorials so you can understand fusion engine better! There are couple tutorials to get you started with basics and some are more advanced so you can create your first game with ease!</p>"},{"location":"v3/tutorials/#table-of-contents","title":"Table of contents","text":"<ul> <li>Tutorial 1: Setting Everything Up</li> <li>Tutorial 2: Basic Rendering</li> </ul>"},{"location":"v3/tutorials/#tutorial-1-setting-everything-up","title":"Tutorial 1: Setting Everything Up","text":"<p>This tutorial is about setting up fusion-engine so you can work on your project. Have fun! Start your journey: Tutorial 1</p>"},{"location":"v3/tutorials/#tutorial-2-basic-rendering","title":"Tutorial 2: Basic Rendering","text":"<p>In this tutorial we're covering the basics like creating a window and rendering a image. Before this tutorial, make sure you have everything setup, if not you can follow tutorial-1. Have fun! Start your journey: Tutorial 2</p>"},{"location":"v3/tutorials/basics/","title":"Basic rendering tutorial","text":""},{"location":"v3/tutorials/basics/#introduction","title":"Introduction","text":"<p>This is a tutorial so you would understand the basics of the engine and how it works. In this tutorial we will learn how to render a window and draw some images on it. If you want to learn more, then go to our docs and select wiki.</p> <p>This tutorial also expect you to have everything setup, if not, head over to tutorial 1: setting everything up</p> <p>The Final Product Should Look like This: </p>"},{"location":"v3/tutorials/basics/#creating-a-window","title":"Creating a window","text":"<p>So if you read tutorial 1 you know we have the main variable running our engine object. So now we create a window with the help of that main object:</p> <pre><code>window = main.window.new_window(\"Tutorial 2\", 600, 600)\n</code></pre> <p>The first argument that we give our function is our title, second argument is our width and third one is height</p>"},{"location":"v3/tutorials/basics/#pre-loading-image","title":"Pre-loading image","text":"<p>We will now pre-load a image so we can draw it later on our window. We do it like this:</p> <pre><code>image = main.image.open_image(window, main.debug.DEBUGIMAGE, 0, 0, 600, 600)\n</code></pre> <p>Fist argument is our window, second is our image path, third is our x position, fourth is our y position, fifth is our width and sixth is our height. As you maybe see were using main.debug.DEBUGIMAGE, which is a build in image into our engine for testing purposes. We will use it for our tutorial</p>"},{"location":"v3/tutorials/basics/#starting-a-loop","title":"Starting a loop","text":"<p>A loop is basicly what lets our window be open the whole time and not be automaticly closed. You also run there functions that need to ran every frame. So we start a loop like this:</p> <pre><code>@main.window.loop\ndef loop():\n    ... # Code goes here\n\n</code></pre>"},{"location":"v3/tutorials/basics/#drawing-image","title":"Drawing image","text":"<p>So we still need to draw our image after loading it, and you can do that easily inside a loop like this:</p> <pre><code>@main.window.loop\ndef loop():\n    main.image.draw_image(image)\n\n</code></pre> <p>As you see we have a draw_image function in our loop with the image loaded image as argument.</p>"},{"location":"v3/tutorials/basics/#full-code","title":"Full code","text":"<p>Here is our full code that we could through this tutorial:</p> <pre><code>import fusionengine as fusion\n\nmain = fusion.Main()\n\nwindow = main.window.new_window(\"Example: 1\", 600, 600)\nimage = main.image.open_image(window, main.debug.DEBUGIMAGE, 0, 0, 600, 600)\n\n\n@main.window.loop\ndef loop():\n    main.image.draw_image(image)\n</code></pre>"},{"location":"v3/tutorials/basics/#ending","title":"Ending","text":"<p>This was our basic tutorial to images. There are (or will be) more tutorials, so check them our. Or otherwise you could check our docs for more information. Happy coding!</p>"},{"location":"v3/tutorials/platformer/","title":"Platformer tutorial","text":"<p>This is a tutorial how to build a basic platformer using fusion-engine</p>"},{"location":"v3/tutorials/setup/","title":"Setting everything up","text":""},{"location":"v3/tutorials/setup/#introduction","title":"Introduction","text":"<p>Welcome to our fusion-engine tutorials! Here you can learn about our engine and how to use it! This will go easy over everything you need to know to start programming with fusion!</p> <p>So this tutorial is made to setup everything, so you can start programming with fusion-engine! But if you already have everything setup then head over to tutorial 2: basic rendering</p>"},{"location":"v3/tutorials/setup/#installing","title":"Installing","text":"<p>So firstly we need to install fusion-engine. We have our package hoster at pypi so you can easly install it by running:</p> <pre><code>  pip install fusion-engine\n</code></pre>"},{"location":"v3/tutorials/setup/#importing","title":"Importing","text":"<p>Now we need to import fusion-engine to our project. We do it like this:</p> <pre><code>  import fusionengine as engine\n</code></pre>"},{"location":"v3/tutorials/setup/#setting-up","title":"Setting up","text":"<p>So after inporting we need to do some setup. We need to create a object of our engine so we can use it. We do it like this:</p> <pre><code>  main = engine.Main()\n</code></pre>"},{"location":"v3/tutorials/setup/#ending","title":"Ending","text":"<p>That was it, our engine is now setup! Now every function works from our main variable, as you might see later.</p>"},{"location":"v3/wiki/","title":"Wiki","text":"<p>Welcome to our wiki! Here you will find all function with their small explanaion and how to use them. We have seperated the wiki in some parts, like main wiki, color wiki and more. You choose one you need. Can't find something? Then try looking in the main wiki So have luck!</p>"},{"location":"v3/wiki/#table-of-contents","title":"Table of contents","text":"<ul> <li>Main Wiki</li> <li>External tools Wiki</li> <li>Color Wiki</li> <li>Font Wiki</li> <li>Key Wiki</li> <li>Math Wiki</li> </ul>"},{"location":"v3/wiki/color/","title":"Color","text":""},{"location":"v3/wiki/color/#using-colors","title":"Using colors","text":"<p>Our engine has some build in predefined colors so it's a bit easier for you with colors, to acess the colors you run:</p> <pre><code>main.color.WHITE\n</code></pre>"},{"location":"v3/wiki/color/#all-colors","title":"All colors","text":"Deprecated  The color name is always in capital letters. Here are all predefined colors:  <pre><code>BLUE = (0, 0, 255, 255)\nBLACK = (0, 0, 0, 255)\nWHITE = (255, 255, 255, 255)\nGREEN = (255, 255, 255, 255)\nRED = (255, 0, 0, 255)\nYELLOW = (255, 255, 0, 255)\nPURPLE = (255, 0, 255, 255)\nCYAN = (0, 255, 255, 255)\nORANGE = (255, 165, 0, 255)\nGRAY = (128, 128, 128, 255)\nBROWN = (165, 42, 42, 255)\nPINK = (255, 192, 203, 255)\nMAGENTA = (255, 0, 255, 255)\nSILVER = (192, 192, 192, 255)\nGOLD = (255, 215, 0, 255)\nBRONZE = (205, 127, 50, 255)\nLIME = (0, 255, 0, 255)\nOLIVE = (128, 128, 0, 255)\nTEAL = (0, 128, 128, 255)\nNAVY = (0, 0, 128, 255)\nMAROON = (128, 0, 0, 255)\nINDIGO = (75, 0, 130, 255)\nTURQUOISE = (64, 224, 208, 255)\nVIOLET = (238, 130, 238, 255)\nAQUA = (0, 255, 255, 255)\nTAN = (210, 180, 140, 255)\nBEIGE = (245, 245, 220, 255)\nIVORY = (255, 255, 240, 255)\nLAVENDER = (230, 230, 250, 255)\nMINT = (189, 252, 201, 255)\nSALMON = (250, 128, 114, 255)\nSCARLET = (255, 36, 0, 255)\nTEAL = (0, 128, 128, 255)\nTOMATO = (255, 99, 71, 255)\nCRIMSON = (220, 20, 60, 255)\nAZURE = (0, 128, 255, 255)\n</code></pre> <p>The color name is always capitalised as per PEP 8 \u2192 Constants. All colors are defined and named (with capitalised form) as per Sublime Text \u2192 Docs \u2192 Color Schemes \u2192 Appendix - CSS Colors.</p>"},{"location":"v3/wiki/color/#custom-color","title":"Custom color","text":"<p>If you want your own color, you just give your function a tuple argument with RGBA colors, here is an example:</p> <pre><code>main.draw.drawRect(window, 100, 100, 400, 400, (255, 255, 255, 0))\n</code></pre>"},{"location":"v3/wiki/color/#hex-to-rgba","title":"Hex to rgba","text":"<p>If you have a hex color and want to convert it to rgba you can use this function:</p> <pre><code>main.colortools.hex_to_rgba(hex)\n</code></pre>"},{"location":"v3/wiki/external/","title":"External tools","text":""},{"location":"v3/wiki/external/#using-pygame","title":"Using pygame","text":"<p>If you cant find some function you need in this engine, the you could use pygame as the engine is build on pygame. You dont need to import pygame, as that can make so issues, you just use:</p> <pre><code>fusion.pg\n</code></pre> <p>Make sure your not using main (the initialized class) but the module itself.</p>"},{"location":"v3/wiki/external/#using-codon-compiler","title":"Using Codon Compiler","text":"<p>So you heard of codon, a python compiler with can compile your python code to machine code, which makes your code a lot faster But how do you use it? Well, its easy! You just install it and then modify these things in your code:</p> <p>Imports:</p> <pre><code>from python import fusionengine as fusion\n</code></pre> <p>Loop: You need to modify our loop to support codon, so you need to change it to this:</p> <pre><code>while main.window.running(window):\n    ... # Your own loop thing\n</code></pre> <p>You may reconise this type of while loop from the main wiki as your second option.</p>"},{"location":"v3/wiki/fonts/","title":"Fonts","text":""},{"location":"v3/wiki/fonts/#fonts","title":"Fonts","text":"<p>Our engine has some build in fonts, the following fonts are available:</p> <p>Nunito Sans Light:</p> <pre><code>main.fonts.NUNITO_LIGHT\n</code></pre> <p>Saira Condensed Extrabold:</p> <pre><code>main.fonts.SAIRACONDENSED_EXTRABOLD\n</code></pre> <p>There will be more fonts available in the future.</p>"},{"location":"v3/wiki/keys/","title":"Keys","text":""},{"location":"v3/wiki/keys/#keys","title":"Keys","text":"<p>We use PySDL2 for this, here are our key bindings to the sdl2 keys:</p> <pre><code>    KEY_UNKNOWN = sdl2.SDLK_UNKNOWN\n    KEY_RETURN = sdl2.SDLK_RETURN\n    KEY_ESCAPE = sdl2.SDLK_ESCAPE\n    KEY_BACKSPACE = sdl2.SDLK_BACKSPACE\n    KEY_TAB = sdl2.SDLK_TAB\n    KEY_SPACE = sdl2.SDLK_SPACE\n    KEY_EXCLAIM = sdl2.SDLK_EXCLAIM\n    KEY_QUOTEDBL = sdl2.SDLK_QUOTEDBL\n    KEY_HASH = sdl2.SDLK_HASH\n    KEY_PERCENT = sdl2.SDLK_PERCENT\n    KEY_DOLLAR = sdl2.SDLK_DOLLAR\n    KEY_AMPERSAND = sdl2.SDLK_AMPERSAND\n    KEY_QUOTE = sdl2.SDLK_QUOTE\n    KEY_LEFTPAREN = sdl2.SDLK_LEFTPAREN\n    KEY_RIGHTPAREN = sdl2.SDLK_RIGHTPAREN\n    KEY_ASTERISK = sdl2.SDLK_ASTERISK\n    KEY_PLUS = sdl2.SDLK_PLUS\n    KEY_COMMA = sdl2.SDLK_COMMA\n    KEY_MINUS = sdl2.SDLK_MINUS\n    KEY_PERIOD = sdl2.SDLK_PERIOD\n    KEY_SLASH = sdl2.SDLK_SLASH\n    KEY_0 = sdl2.SDLK_0\n    KEY_1 = sdl2.SDLK_1\n    KEY_2 = sdl2.SDLK_2\n    KEY_3 = sdl2.SDLK_3\n    KEY_4 = sdl2.SDLK_4\n    KEY_5 = sdl2.SDLK_5\n    KEY_6 = sdl2.SDLK_6\n    KEY_7 = sdl2.SDLK_7\n    KEY_8 = sdl2.SDLK_8\n    KEY_9 = sdl2.SDLK_9\n    KEY_COLON = sdl2.SDLK_COLON\n    KEY_SEMICOLON = sdl2.SDLK_SEMICOLON\n    KEY_LESS = sdl2.SDLK_LESS\n    KEY_EQUALS = sdl2.SDLK_EQUALS\n    KEY_GREATER = sdl2.SDLK_GREATER\n    KEY_QUESTION = sdl2.SDLK_QUESTION\n    KEY_AT = sdl2.SDLK_AT\n    KEY_LEFTBRACKET = sdl2.SDLK_LEFTBRACKET\n    KEY_BACKSLASH = sdl2.SDLK_BACKSLASH\n    KEY_RIGHTBRACKET = sdl2.SDLK_RIGHTBRACKET\n    KEY_CARET = sdl2.SDLK_CARET\n    KEY_UNDERSCORE = sdl2.SDLK_UNDERSCORE\n    KEY_BACKQUOTE = sdl2.SDLK_BACKQUOTE\n    KEY_a = sdl2.SDLK_a\n    KEY_b = sdl2.SDLK_b\n    KEY_c = sdl2.SDLK_c\n    KEY_d = sdl2.SDLK_d\n    KEY_e = sdl2.SDLK_e\n    KEY_f = sdl2.SDLK_f\n    KEY_g = sdl2.SDLK_g\n    KEY_h = sdl2.SDLK_h\n    KEY_i = sdl2.SDLK_i\n    KEY_j = sdl2.SDLK_j\n    KEY_k = sdl2.SDLK_k\n    KEY_l = sdl2.SDLK_l\n    KEY_m = sdl2.SDLK_m\n    KEY_n = sdl2.SDLK_n\n    KEY_o = sdl2.SDLK_o\n    KEY_p = sdl2.SDLK_p\n    KEY_q = sdl2.SDLK_q\n    KEY_r = sdl2.SDLK_r\n    KEY_s = sdl2.SDLK_s\n    KEY_t = sdl2.SDLK_t\n    KEY_u = sdl2.SDLK_u\n    KEY_v = sdl2.SDLK_v\n    KEY_w = sdl2.SDLK_w\n    KEY_x = sdl2.SDLK_x\n    KEY_y = sdl2.SDLK_y\n    KEY_z = sdl2.SDLK_z\n    KEY_CAPSLOCK = sdl2.SDLK_CAPSLOCK\n    KEY_F1 = sdl2.SDLK_F1\n    KEY_F2 = sdl2.SDLK_F2\n    KEY_F3 = sdl2.SDLK_F3\n    KEY_F4 = sdl2.SDLK_F4\n    KEY_F5 = sdl2.SDLK_F5\n    KEY_F6 = sdl2.SDLK_F6\n    KEY_F7 = sdl2.SDLK_F7\n    KEY_F8 = sdl2.SDLK_F8\n    KEY_F9 = sdl2.SDLK_F9\n    KEY_F10 = sdl2.SDLK_F10\n    KEY_F11 = sdl2.SDLK_F11\n    KEY_F12 = sdl2.SDLK_F12\n    KEY_PRINTSCREEN = sdl2.SDLK_PRINTSCREEN\n    KEY_SCROLLLOCK = sdl2.SDLK_SCROLLLOCK\n    KEY_PAUSE = sdl2.SDLK_PAUSE\n    KEY_INSERT = sdl2.SDLK_INSERT\n    KEY_HOME = sdl2.SDLK_HOME\n    KEY_PAGEUP = sdl2.SDLK_PAGEUP\n    KEY_DELETE = sdl2.SDLK_DELETE\n    KEY_END = sdl2.SDLK_END\n    KEY_PAGEDOWN = sdl2.SDLK_PAGEDOWN\n    KEY_RIGHT = sdl2.SDLK_RIGHT\n    KEY_LEFT = sdl2.SDLK_LEFT\n    KEY_DOWN = sdl2.SDLK_DOWN\n    KEY_UP = sdl2.SDLK_UP\n    KEY_NUMLOCKCLEAR = sdl2.SDLK_NUMLOCKCLEAR\n    KEY_KP_DIVIDE = sdl2.SDLK_KP_DIVIDE\n    KEY_KP_MULTIPLY = sdl2.SDLK_KP_MULTIPLY\n    KEY_KP_MINUS = sdl2.SDLK_KP_MINUS\n    KEY_KP_PLUS = sdl2.SDLK_KP_PLUS\n    KEY_KP_ENTER = sdl2.SDLK_KP_ENTER\n    KEY_KP_1 = sdl2.SDLK_KP_1\n    KEY_KP_2 = sdl2.SDLK_KP_2\n    KEY_KP_3 = sdl2.SDLK_KP_3\n    KEY_KP_4 = sdl2.SDLK_KP_4\n    KEY_KP_5 = sdl2.SDLK_KP_5\n    KEY_KP_6 = sdl2.SDLK_KP_6\n    KEY_KP_7 = sdl2.SDLK_KP_7\n    KEY_KP_8 = sdl2.SDLK_KP_8\n    KEY_KP_9 = sdl2.SDLK_KP_9\n    KEY_KP_0 = sdl2.SDLK_KP_0\n    KEY_KP_PERIOD = sdl2.SDLK_KP_PERIOD\n    KEY_APPLICATION = sdl2.SDLK_APPLICATION\n    KEY_POWER = sdl2.SDLK_POWER\n    KEY_KP_EQUALS = sdl2.SDLK_KP_EQUALS\n    KEY_F13 = sdl2.SDLK_F13\n    KEY_F14 = sdl2.SDLK_F14\n    KEY_F15 = sdl2.SDLK_F15\n    KEY_F16 = sdl2.SDLK_F16\n    KEY_F17 = sdl2.SDLK_F17\n    KEY_F18 = sdl2.SDLK_F18\n    KEY_F19 = sdl2.SDLK_F19\n    KEY_F20 = sdl2.SDLK_F20\n    KEY_F21 = sdl2.SDLK_F21\n    KEY_F22 = sdl2.SDLK_F22\n    KEY_F23 = sdl2.SDLK_F23\n    KEY_F24 = sdl2.SDLK_F24\n    KEY_EXECUTE = sdl2.SDLK_EXECUTE\n    KEY_HELP = sdl2.SDLK_HELP\n    KEY_MENU = sdl2.SDLK_MENU\n    KEY_SELECT = sdl2.SDLK_SELECT\n    KEY_STOP = sdl2.SDLK_STOP\n    KEY_AGAIN = sdl2.SDLK_AGAIN\n    KEY_UNDO = sdl2.SDLK_UNDO\n    KEY_CUT = sdl2.SDLK_CUT\n    KEY_COPY = sdl2.SDLK_COPY\n    KEY_PASTE = sdl2.SDLK_PASTE\n    KEY_FIND = sdl2.SDLK_FIND\n    KEY_MUTE = sdl2.SDLK_MUTE\n    KEY_VOLUMEUP = sdl2.SDLK_VOLUMEUP\n    KEY_VOLUMEDOWN = sdl2.SDLK_VOLUMEDOWN\n    KEY_KP_COMMA = sdl2.SDLK_KP_COMMA\n    KEY_KP_EQUALSAS400 = sdl2.SDLK_KP_EQUALSAS400\n    KEY_ALTERASE = sdl2.SDLK_ALTERASE\n    KEY_SYSREQ = sdl2.SDLK_SYSREQ\n    KEY_CANCEL = sdl2.SDLK_CANCEL\n    KEY_CLEAR = sdl2.SDLK_CLEAR\n    KEY_PRIOR = sdl2.SDLK_PRIOR\n    KEY_RETURN2 = sdl2.SDLK_RETURN2\n    KEY_SEPARATOR = sdl2.SDLK_SEPARATOR\n    KEY_OUT = sdl2.SDLK_OUT\n    KEY_OPER = sdl2.SDLK_OPER\n    KEY_CLEARAGAIN = sdl2.SDLK_CLEARAGAIN\n    KEY_CRSEL = sdl2.SDLK_CRSEL\n    KEY_EXSEL = sdl2.SDLK_EXSEL\n    KEY_KP_00 = sdl2.SDLK_KP_00\n    KEY_KP_000 = sdl2.SDLK_KP_000\n    KEY_THOUSANDSSEPARATOR = sdl2.SDLK_THOUSANDSSEPARATOR\n    KEY_DECIMALSEPARATOR = sdl2.SDLK_DECIMALSEPARATOR\n    KEY_CURRENCYUNIT = sdl2.SDLK_CURRENCYUNIT\n    KEY_CURRENCYSUBUNIT = sdl2.SDLK_CURRENCYSUBUNIT\n    KEY_KP_LEFTPAREN = sdl2.SDLK_KP_LEFTPAREN\n    KEY_KP_RIGHTPAREN = sdl2.SDLK_KP_RIGHTPAREN\n    KEY_KP_LEFTBRACE = sdl2.SDLK_KP_LEFTBRACE\n    KEY_KP_RIGHTBRACE = sdl2.SDLK_KP_RIGHTBRACE\n    KEY_KP_TAB = sdl2.SDLK_KP_TAB\n    KEY_KP_BACKSPACE = sdl2.SDLK_KP_BACKSPACE\n    KEY_KP_A = sdl2.SDLK_KP_A\n    KEY_KP_B = sdl2.SDLK_KP_B\n    KEY_KP_C = sdl2.SDLK_KP_C\n    KEY_KP_D = sdl2.SDLK_KP_D\n    KEY_KP_E = sdl2.SDLK_KP_E\n    KEY_KP_F = sdl2.SDLK_KP_F\n    KEY_KP_XOR = sdl2.SDLK_KP_XOR\n    KEY_KP_POWER = sdl2.SDLK_KP_POWER\n    KEY_KP_PERCENT = sdl2.SDLK_KP_PERCENT\n    KEY_KP_LESS = sdl2.SDLK_KP_LESS\n    KEY_KP_GREATER = sdl2.SDLK_KP_GREATER\n    KEY_KP_AMPERSAND = sdl2.SDLK_KP_AMPERSAND\n    KEY_KP_DBLAMPERSAND = sdl2.SDLK_KP_DBLAMPERSAND\n    KEY_KP_VERTICALBAR = sdl2.SDLK_KP_VERTICALBAR\n    KEY_KP_DBLVERTICALBAR = sdl2.SDLK_KP_DBLVERTICALBAR\n    KEY_KP_COLON = sdl2.SDLK_KP_COLON\n    KEY_KP_HASH = sdl2.SDLK_KP_HASH\n    KEY_KP_SPACE = sdl2.SDLK_KP_SPACE\n    KEY_KP_AT = sdl2.SDLK_KP_AT\n    KEY_KP_EXCLAM = sdl2.SDLK_KP_EXCLAM\n    KEY_KP_MEMSTORE = sdl2.SDLK_KP_MEMSTORE\n    KEY_KP_MEMRECALL = sdl2.SDLK_KP_MEMRECALL\n    KEY_KP_MEMCLEAR = sdl2.SDLK_KP_MEMCLEAR\n    KEY_KP_MEMADD = sdl2.SDLK_KP_MEMADD\n    KEY_KP_MEMSUBTRACT = sdl2.SDLK_KP_MEMSUBTRACT\n    KEY_KP_MEMMULTIPLY = sdl2.SDLK_KP_MEMMULTIPLY\n    KEY_KP_MEMDIVIDE = sdl2.SDLK_KP_MEMDIVIDE\n    KEY_KP_PLUSMINUS = sdl2.SDLK_KP_PLUSMINUS\n    KEY_KP_CLEAR = sdl2.SDLK_KP_CLEAR\n    KEY_KP_CLEARENTRY = sdl2.SDLK_KP_CLEARENTRY\n    KEY_KP_BINARY = sdl2.SDLK_KP_BINARY\n    KEY_KP_OCTAL = sdl2.SDLK_KP_OCTAL\n    KEY_KP_DECIMAL = sdl2.SDLK_KP_DECIMAL\n    KEY_KP_HEXADECIMAL = sdl2.SDLK_KP_HEXADECIMAL\n    KEY_LCTRL = sdl2.SDLK_LCTRL\n    KEY_LSHIFT = sdl2.SDLK_LSHIFT\n    KEY_LALT = sdl2.SDLK_LALT\n    KEY_LGUI = sdl2.SDLK_LGUI\n    KEY_RCTRL = sdl2.SDLK_RCTRL\n    KEY_RSHIFT = sdl2.SDLK_RSHIFT\n    KEY_RALT = sdl2.SDLK_RALT\n    KEY_RGUI = sdl2.SDLK_RGUI\n    KEY_MODE = sdl2.SDLK_MODE\n    KEY_AUDIONEXT = sdl2.SDLK_AUDIONEXT\n    KEY_AUDIOPREV = sdl2.SDLK_AUDIOPREV\n    KEY_AUDIOSTOP = sdl2.SDLK_AUDIOSTOP\n    KEY_AUDIOPLAY = sdl2.SDLK_AUDIOPLAY\n    KEY_AUDIOMUTE = sdl2.SDLK_AUDIOMUTE\n    KEY_MEDIASELECT = sdl2.SDLK_MEDIASELECT\n    KEY_WWW = sdl2.SDLK_WWW\n    KEY_MAIL = sdl2.SDLK_MAIL\n    KEY_CALCULATOR = sdl2.SDLK_CALCULATOR\n    KEY_COMPUTER = sdl2.SDLK_COMPUTER\n    KEY_AC_SEARCH = sdl2.SDLK_AC_SEARCH\n    KEY_AC_HOME = sdl2.SDLK_AC_HOME\n    KEY_AC_BACK = sdl2.SDLK_AC_BACK\n    KEY_AC_FORWARD = sdl2.SDLK_AC_FORWARD\n    KEY_AC_STOP = sdl2.SDLK_AC_STOP\n    KEY_AC_REFRESH = sdl2.SDLK_AC_REFRESH\n    KEY_AC_BOOKMARKS = sdl2.SDLK_AC_BOOKMARKS\n    KEY_BRIGHTNESSDOWN = sdl2.SDLK_BRIGHTNESSDOWN\n    KEY_BRIGHTNESSUP = sdl2.SDLK_BRIGHTNESSUP\n    KEY_DISPLAYSWITCH = sdl2.SDLK_DISPLAYSWITCH\n    KEY_KBDILLUMTOGGLE = sdl2.SDLK_KBDILLUMTOGGLE\n    KEY_KBDILLUMDOWN = sdl2.SDLK_KBDILLUMDOWN\n    KEY_KBDILLUMUP = sdl2.SDLK_KBDILLUMUP\n    KEY_EJECT = sdl2.SDLK_EJECT\n    KEY_SLEEP = sdl2.SDLK_SLEEP\n</code></pre>"},{"location":"v3/wiki/math/","title":"Math","text":""},{"location":"v3/wiki/math/#types-of-pi-in-fusion-engine","title":"Types of PI in Fusion Engine","text":"<p>These are used for certain miscellaneous math things.</p> <p>Full version of pi (3.141592653589793238462643383279502884197):</p> <pre><code>    main.math.PI\n</code></pre> <p>A slightly smaller version that python's math library uses (3.141592653589793):</p> <pre><code>    main.math.SMALLERPI\n</code></pre> <p>An extremely shortened version of pi (3.14):</p> <pre><code>    main.math.SMALLPI\n</code></pre> <p>This allows you to get the floor value of a number.</p> <pre><code>main.math.FLOOR(3.4)\n</code></pre>"},{"location":"v3/wiki/math/#eulers-number","title":"Euler's Number","text":"<p>You can read more about it here.</p> <pre><code>    main.math.EULERNUMBER\n</code></pre>"},{"location":"v3/wiki/wiki/","title":"Main Wiki","text":""},{"location":"v3/wiki/wiki/#create-window","title":"Create window","text":"<p>To create a window were thing are draw, then you need to use this:</p> <pre><code>window = main.window.new_window(\"Example: 1\", 800, 600)\n</code></pre>"},{"location":"v3/wiki/wiki/#start-loop","title":"Start loop","text":"<p>In a loop you can draw things and it will run with the FPS that is setup. To start a loop, you have two choices:</p> <p>Choice 1:</p> <pre><code>@main.window.loop\ndef loop():\n    ... # Your own loop things\n</code></pre> <p>Choice 2:</p> <pre><code>while main.window.running(window):\n    ... # Your own loop thing\n\n</code></pre> <p>There is basically no difference, they all are doing the same thing, you use what you prefer. In our examples we use choice 1.</p>"},{"location":"v3/wiki/wiki/#default-message","title":"Default message","text":"<p>If you tried using our engine you may have encountered this message being printed to terminal:</p> <pre><code>Fusion Engine 1.0.2 (Pygame-ce 2.3.0, Python 3.11.4)\nWelcome to Fusion Engine! https://github.com/dimkauzh/fusion-engine\n</code></pre> <p>To disable this behavior, you just give the main class when initting this argument: <code>message=False</code>, like this:</p> <pre><code>import fusionengine as fusion\n\nmain = fusion.Main(\"message=False\")\n</code></pre>"},{"location":"v3/wiki/wiki/#set-background-color","title":"Set Background color","text":"<p>If you want to set a background color, you use this function before all draw functions:</p> <pre><code>main.draw.set_background_color(window, main.color.WHITE)\n</code></pre>"},{"location":"v3/wiki/wiki/#deltatime","title":"DeltaTime","text":"<p>if you want to access delta time, you use this:</p> <pre><code>main.window.DELTATIME\n</code></pre>"},{"location":"v3/wiki/wiki/#predefined-shapes","title":"Predefined shapes","text":"<p>We have some predefined shapes that can be used and be drew on the screen. Here are some:</p> <p>Rectangle:</p> <pre><code>main.shape.new_rect(x, y, width, height, color)\n</code></pre> <ul> <li>More shapes will be coming soon</li> </ul>"},{"location":"v3/wiki/wiki/#window-icon","title":"Window icon","text":"<p>So you want to change the icon of your window? Well, its easy:</p> <pre><code>main.window.change_icon(\"path_to_icon\")\n</code></pre>"},{"location":"v3/wiki/wiki/#set-fps","title":"Set FPS","text":"<p>To set the framerate of your window, you use this:</p> <pre><code>main.window.set_fps(60)\n\n</code></pre>"},{"location":"v3/wiki/wiki/#vectors","title":"Vectors","text":""},{"location":"v3/wiki/wiki/#vector2d","title":"Vector2d","text":"<p>If you want to create a 2d vector that stores x and y, then you do this:</p> <pre><code>\nvector = main.vector.new_vector2d(10, 10)\n</code></pre>"},{"location":"v3/wiki/wiki/#draw-a-line","title":"Draw a line","text":"<p>To draw a line, you use this:</p> <pre><code>#                           x1   y1   x2   y2       color\nmain.draw.draw_line(window, 100, 100, 200, 200, main.color.BLUE)\n</code></pre>"},{"location":"v3/wiki/wiki/#draw-rectangle","title":"Draw rectangle","text":"<p>If you just want to draw a rectangle to test or to use it for your game/app, then you have 3 options:</p> <p>Option one: just draw a rectangle</p> <pre><code>main.draw.draw_rect(window, 100, 100, 400, 400, main.color.BLUE)\n</code></pre> <p>Second option: draw predefined rectangle:</p> <pre><code>main.draw.draw_own_rect(window, your_rect)\n</code></pre> <p>Third option: Draw a rectangle of lines</p> <pre><code>#                                 x    y    w    h        color\nmain.draw.draw_line_rect(window, 100, 100, 400, 400, main.color.BLUE)\n</code></pre>"},{"location":"v3/wiki/wiki/#draw-image","title":"Draw image","text":"<p>You first need to create a variable with your image and image data:</p> <pre><code>image = main.image.open_image(window, main.DEBUGIMAGE, 100, 100, 400, 400)\n</code></pre> <p>main.DEBUGIMAGE is an image that is included with the engine, so you can use it freely. Then you need to render it (In the best situation this will happen in your loop):</p> <pre><code>main.image.draw_image(image)\n</code></pre>"},{"location":"v3/wiki/wiki/#create-entity-warning-pre-alpha-its-in-really-early-stages","title":"Create entity WARNING: PRE ALPHA (It's in really early stages)","text":"<p>If you want a player or an enemy or some moving object in your game, you can use an entity, thats an object that helps you manage things in your game:</p> <pre><code>#                                  x    y    w   h\nentity = main.body.Entity(window, 100, 100, 50, 50)\n</code></pre>"},{"location":"v3/wiki/wiki/#draw-rect-with-entity","title":"Draw rect with entity","text":"<p>If you want to draw a rectangle that is basically in your entity, then you do it like this:</p> <pre><code>entity.draw_image(main.color.BLACK)\n\n</code></pre>"},{"location":"v3/wiki/wiki/#draw-image-with-entity","title":"Draw image with entity","text":"<p>If you want to draw a image on your entity, then you do this:</p> <pre><code>entity.image(\"image_path\")\n</code></pre>"},{"location":"v3/wiki/wiki/#sound","title":"Sound","text":""},{"location":"v3/wiki/wiki/#load-sound","title":"Load sound","text":"<p>To load a sound you do this:</p> <pre><code>your_sound = main.sound.load_sound(\"path_to_sound\")\n</code></pre>"},{"location":"v3/wiki/wiki/#play-sound","title":"Play sound","text":"<p>To play your loaded sound you use this:</p> <pre><code>your_sound.play()\n</code></pre>"},{"location":"v3/wiki/wiki/#stop-sound","title":"Stop sound","text":"<p>To stop your playing sound you use this:</p> <pre><code>your_sound.stop()\n</code></pre>"},{"location":"v3/wiki/wiki/#backround-music","title":"Backround music","text":"<p>To start playing background music you use this:</p> <pre><code>main.sound.play_background_music(\"path_to_sound\")\n</code></pre>"},{"location":"v3/wiki/wiki/#storage-system","title":"Storage system","text":""},{"location":"v3/wiki/wiki/#init","title":"Init","text":"<pre><code>my_db = JsonStorage(\"my_db.json\")\n</code></pre> <p>This how you initialize your json storage system</p>"},{"location":"v3/wiki/wiki/#insertion","title":"Insertion","text":"<pre><code>my_db.insert({\"first_name\": \"john\", \"last_name\": \"wick\", \"gold\": 50})\nmy_db.insert({\"first_name\": \"alexander\", \"last_name\": \"wick\", \"gold\": 20})\n</code></pre> <p>The code inserts two entries into the storage. The inserted data contains information about individuals' first names, last names, and gold amounts.</p>"},{"location":"v3/wiki/wiki/#reading","title":"Reading","text":"<pre><code>Copy code\nmy_db.search({\"last_name\": \"wick\"})\nmy_db.search({\"last_name\": \"wick\"}, get_index=True)\n</code></pre> <p>The code demonstrates reading operations. It searches for entries with the last name \"wick\" and retrieves results with and without index information.</p>"},{"location":"v3/wiki/wiki/#updating","title":"Updating","text":"<pre><code>alex['gold'] += 20\nmy_db.update(alex_index, alex)\n</code></pre> <p>The code showcases how to update data in the storage. In this case, it increases the \"gold\" value for an entry with the first name \"alexander\" by 20.</p>"},{"location":"v3/wiki/wiki/#deleting","title":"Deleting","text":"<pre><code>my_db.delete(john_index)\n</code></pre> <p>The code demonstrates deletion of data by removing an entry with the first name \"john\" from the storage.</p>"},{"location":"v3/wiki/wiki/#saving-to-disk","title":"Saving to Disk","text":"<pre><code>my_db.save()\n</code></pre> <p>The code shows how to save the modified data back to the storage file on disk.</p>"},{"location":"v3/wiki/wiki/#keyboard-input","title":"Keyboard input","text":""},{"location":"v3/wiki/wiki/#keydown","title":"Keydown","text":"<p>if you need keyboard input, then use this if statement with your own key (see key tab for all key names):</p> <pre><code> if main.event.key_down(main.keys.KEY_a):\n     print(\"Key A pressed\")\n</code></pre>"},{"location":"v3/wiki/wiki/#keydown-once","title":"Keydown once","text":"<p>If you need keydown to be only once, then you use this:</p> <pre><code>if main.event.key_down_once(main.keys.KEY_a):\n    print(\"Key A pressed\")\n</code></pre>"},{"location":"v3/wiki/wiki/#user-interface-ui","title":"User Interface (UI)","text":"<p>Creating a small ui for your application/game is easy with our following tools:</p>"},{"location":"v3/wiki/wiki/#buttons","title":"Buttons","text":"<p>To create a simple button we do the following:</p> <pre><code>\n# Create the button outside the loop\nbutton = main.ui.button.new_button(\n    window,\n    main.shape.new_rect_button(200, 200, 200, 200),\n    \"Hello World\"\n)\n\n</code></pre>"},{"location":"v3/wiki/wiki/#button-clicked","title":"Button clicked","text":"<p>If you want to check if your button was pressed or is being pressed, then you do that this way:</p> <pre><code>@main.window.loop\ndef loop():\n    if button.button_pressed():\n        ... # Do your stuff\n</code></pre>"},{"location":"v3/wiki/wiki/#rendering-text","title":"Rendering text","text":"<p>If you want to render some fonts, then you can do it like this:</p> <ul> <li>Option 1: Render text with build into fusion or your own font</li> </ul> <pre><code>#                                            x   y         font              size      color\nmain.ui.text.print_text(window, \"Your text\", 10, 10, main.fonts.NUNITO_LIGHT, 20, main.color.WHITE)\n</code></pre> <ul> <li>Option 2: Render text with system font Its the same option 1, but you change the font to name of the font, like this:</li> </ul> <pre><code>main.ui.text.print_text(window, \"Your text\", 10, 10, \"Arial\", 20, main.color.WHITE)\n</code></pre>"},{"location":"v3/wiki/wiki/#quit","title":"Quit","text":"<p>The quitting of the engine is done automaticly for you, so you dont have to worry about it.</p>"},{"location":"v3/wiki/wiki/#force-to-quit","title":"Force to quit","text":"<p>If you want to force quit due to some reason, its pretty easy:</p> <pre><code>main.window.force_quit()\n</code></pre>"},{"location":"v4/api/","title":"Api","text":"<p>Welcome to our api! Here you will find all functions that exist in fusion engine and what arguments they get. We have seperated the api in some parts, like main api, color api and more. You choose one you need. Can't find something? Then try looking in the main api! So good luck!</p>"},{"location":"v4/api/#table-of-contents","title":"Table of contents","text":"<ul> <li>Main API</li> <li>Color API</li> <li>Font API</li> <li>Key API</li> </ul>"},{"location":"v4/api/api/","title":"API","text":""},{"location":"v4/api/api/#window","title":"Window","text":"<pre><code>Window(title: str, width: int, height: int) -&gt; your_window\n</code></pre>"},{"location":"v4/api/api/#your_window","title":"your_window:","text":"<pre><code>change_icon(image_path: str)\nloop(your_loop_func)\nrunning(self) -&gt; bool\nset_fps(self, fps: int)\nforce_quit()\ntoggle_quittable(self)\n</code></pre>"},{"location":"v4/api/api/#events","title":"Events","text":"<pre><code>key_down(key)\nkey_down_once(key)\n</code></pre>"},{"location":"v4/api/api/#draw","title":"Draw","text":"<pre><code>draw_line(window: Window, x1: int, y1: int, x2: int, y2: int, color: tuple)\ndraw_line_rect(window: Window, x: int, y: int, width: int, height: int, color: tuple)\ndraw_rect(window: Window, x: int, y: int, width: int, height: int, color: tuple)\nset_background_color(window: Window, color: tuple)\nset_pixel(window: Window, x: int, y: int, color: tuple)\n</code></pre>"},{"location":"v4/api/api/#image","title":"Image","text":"<pre><code>Image(window: Window, image_path: str, x: int, y: int, width: int, height: int)\n</code></pre>"},{"location":"v4/api/api/#body","title":"Body","text":"<pre><code>Entity(window: Window, x: int, y: int, width: int, height: int)\n</code></pre>"},{"location":"v4/api/api/#shape","title":"Shape","text":"<pre><code>Rect(window: Window, x: int, y: int, width: int, height: int, color: tuple) -&gt; your_rect\n</code></pre> <p>your_rect:</p> <pre><code>draw()\n</code></pre>"},{"location":"v4/api/api/#ui","title":"UI","text":"<pre><code>Button(rect: Rect, text: str) -&gt; your_button\nText(window: Window, text: str, x: int, y: int, font_path: str, font_size: int, color: tuple)\n</code></pre> <p>your_button:</p> <pre><code>your_button.button_pressed() -&gt; bool\n</code></pre>"},{"location":"v4/api/api/#debug-files","title":"Debug files","text":"<pre><code>DEBUGIMAGE\n</code></pre>"},{"location":"v4/api/api/#vector","title":"Vector","text":"<pre><code>Vector2D(x: int, y: int)\nVector3D(x: int, y: int, z: int)\n</code></pre>"},{"location":"v4/api/api/#sound","title":"Sound","text":"<pre><code>Sound(sound_path: str) -&gt; your_sound\nBackgroundMusic(sound_path: str) -&gt; your_backgroundmusic\n</code></pre> <p>your_sound:</p> <pre><code>play()\nstop()\nget_volume()\nset_volume(volume: int)\nfadeout(time: str)\n</code></pre> <p>your_backgroundmusic:</p> <pre><code>set_volume(volume: int)\n</code></pre>"},{"location":"v4/api/api/#math","title":"Math","text":"<pre><code>PI = 3.141592653589793238462643383279502884197\nEULERNUMBER = 2.718281828459045\nmain.math.FLOOR(3.4)\n</code></pre>"},{"location":"v4/api/color/","title":"Color API","text":""},{"location":"v4/api/color/#color","title":"Color","text":"<pre><code>ALICEBLUE = (240, 248, 255, 255)\nANTIQUEWHITE = (250, 235, 215, 255)\nAQUA = (0, 255, 255, 255)\nAQUAMARINE = (127, 255, 212, 255)\nAZURE = (240, 255, 255, 255)\nBEIGE = (245, 245, 220, 255)\nBISQUE = (255, 228, 196, 255)\nBLACK = (0, 0, 0, 255)\nBLANCHEDALMOND = (255, 235, 205, 255)\nBLUE = (0, 0, 255, 255)\nBLUEVIOLET = (138, 43, 226, 255)\nBROWN = (165, 42, 42, 255)\nBURLYWOOD = (222, 184, 135, 255)\nCADETBLUE = (95, 158, 160, 255)\nCHARTREUSE = (127, 255, 0, 255)\nCHOCOLATE = (210, 105, 30, 255)\nCORAL = (255, 127, 80, 255)\nCORNFLOWERBLUE = (100, 149, 237, 255)\nCORNSILK = (255, 248, 220, 255)\nCRIMSON = (220, 20, 60, 255)\nCYAN = (0, 255, 255, 255)\nDARKBLUE = (0, 0, 139, 255)\nDARKCYAN = (0, 139, 139, 255)\nDARKGOLDENROD = (184, 134, 11, 255)\nDARKGRAY = (169, 169, 169, 255)\nDARKGREEN = (0, 100, 0, 255)\nDARKKHAKI = (189, 183, 107, 255)\nDARKMAGENTA = (139, 0, 139, 255)\nDARKOLIVEGREEN = (85, 107, 47, 255)\nDARKORANGE = (255, 140, 0, 255)\nDARKORCHID = (153, 50, 204, 255)\nDARKRED = (139, 0, 0, 255)\nDARKSALMON = (233, 150, 122, 255)\nDARKSEAGREEN = (143, 188, 143, 255)\nDARKSLATEBLUE = (72, 61, 139, 255)\nDARKSLATEGRAY = (47, 79, 79, 255)\nDARKTURQUOISE = (0, 206, 209, 255)\nDARKVIOLET = (148, 0, 211, 255)\nDEEPPINK = (255, 20, 147, 255)\nDEEPSKYBLUE = (0, 191, 255, 255)\nDIMGRAY = (105, 105, 105, 255)\nDODGERBLUE = (30, 144, 255, 255)\nFIREBRICK = (178, 34, 34, 255)\nFLORALWHITE = (255, 250, 240, 255)\nFORESTGREEN = (34, 139, 34, 255)\nFUCHSIA = (255, 0, 255, 255)\nGAINSBORO = (220, 220, 220, 255)\nGHOSTWHITE = (248, 248, 255, 255)\nGOLD = (255, 215, 0, 255)\nGOLDENROD = (218, 165, 32, 255)\nGRAY = (128, 128, 128, 255)\nGREEN = (0, 128, 0, 255)\nGREENYELLOW = (173, 255, 47, 255)\nHONEYDEW = (240, 255, 240, 255)\nHOTPINK = (255, 105, 180, 255)\nINDIANRED = (205, 92, 92, 255)\nINDIGO = (75, 0, 130, 255)\nIVORY = (255, 255, 240, 255)\nKHAKI = (240, 230, 140, 255)\nLAVENDER = (230, 230, 250, 255)\nLAVENDERBLUSH = (255, 240, 245, 255)\nLAWNGREEN = (124, 252, 0, 255)\nLEMONCHIFFON = (255, 250, 205, 255)\nLIGHTBLUE = (173, 216, 230, 255)\nLIGHTCORAL = (240, 128, 128, 255)\nLIGHTCYAN = (224, 255, 255, 255)\nLIGHTGOLDENRODYELLOW = (250, 250, 210, 255)\nLIGHTGRAY = (211, 211, 211, 255)\nLIGHTGREEN = (144, 238, 144, 255)\nLIGHTSALMON = (255, 182, 193, 255)\nLIGHTSEAGREEN = (32, 178, 170, 255)\nLIGHTSKYBLUE = (135, 206, 250, 255)\nLIGHTSLATEGRAY = (119, 136, 153, 255)\nLIGHTSTEELBLUE = (176, 196, 222, 255)\nLIGHTYELLOW = (255, 255, 224, 255)\nLIME = (0, 255, 0, 255)\nLIMEGREEN = (50, 205, 50, 255)\nLINEN = (250, 240, 230, 255)\nMAGENTA = (255, 0, 255, 255)\nMAROON = (128, 0, 0, 255)\nMEDIUMAQUAMARINE = (102, 205, 170, 255)\nMEDIUMBLUE = (0, 0, 205, 255)\nMEDIUMORCHID = (186, 85, 211, 255)\nMEDIUMPURPLE = (147, 112, 219, 255)\nMEDIUMSEAGREEN = (60, 179, 113, 255)\nMEDIUMSLATEBLUE = (123, 104, 238, 255)\nMEDIUMSPRINGGREEN = (0, 250, 154, 255)\nMEDIUMTURQUOISE = (72, 209, 204, 255)\nMEDIUMVIOLETRED = (199, 21, 133, 255)\nMIDNIGHTBLUE = (25, 25, 112, 255)\nMINTCREAM = (245, 255, 250, 255)\nMISTYROSE = (255, 228, 225, 255)\nMOCCASIN = (255, 228, 181, 255)\nNAVAJOWHITE = (255, 222, 173, 255)\nNAVY = (0, 0, 128, 255)\nOLDLACE = (253, 245, 230, 255)\nOLIVE = (128, 128, 0, 255)\nOLIVEDRAB = (107, 142, 35, 255)\nORANGE = (255, 165, 0, 255)\nORANGERED = (255, 69, 0, 255)\nORCHID = (218, 112, 214, 255)\nPALEGOLDENROD = (238, 232, 170, 255)\nPALEGREEN = (152, 251, 152, 255)\nPALETURQUOISE = (175, 238, 238, 255)\nPALEVIOLETRED = (219, 112, 147, 255)\nPAPAYAWHIP = (255, 239, 213, 255)\nPEACHPUFF = (255, 218, 185, 255)\nPERU = (205, 133, 63, 255)\nPINK = (255, 192, 203, 255)\nPLUM = (221, 160, 221, 255)\nPOWDERBLUE = (176, 224, 230, 255)\nPURPLE = (128, 0, 128, 255)\nREBECCAPURPLE = (102, 51, 153, 255)\nRED = (255, 0, 0, 255)\nROSYBROWN = (188, 143, 143, 255)\nROYALBLUE = (65, 105, 225, 255)\nSADDLEBROWN = (139, 69, 19, 255)\nSALMON = (250, 128, 114, 255)\nSANDYBROWN = (244, 164, 96, 255)\nSEAGREEN = (46, 139, 87, 255)\nSEASHELL = (255, 245, 238, 255)\nSIENNA = (160, 82, 45, 255)\nSILVER = (192, 192, 192, 255)\nSKYBLUE = (135, 206, 235, 255)\nSLATEBLUE = (106, 90, 205, 255)\nSLATEGRAY = (112, 128, 144, 255)\nSNOW = (255, 250, 250, 255)\nSPRINGGREEN = (0, 255, 127, 255)\nSTEELBLUE = (70, 130, 180, 255)\nTAN = (210, 180, 140, 255)\nTEAL = (0, 128, 128, 255)\nTHISTLE = (216, 191, 216, 255)\nTOMATO = (255, 99, 71, 255)\nTURQUOISE = (64, 224, 208, 255)\nVIOLET = (238, 130, 238, 255)\nWHEAT = (245, 222, 179, 255)\nWHITE = (255, 255, 255, 255)\nWHITESMOKE = (245, 245, 245, 255)\nYELLOW = (255, 255, 0, 255)\nYELLOWGREEN = (154, 205, 50, 255)\n</code></pre>"},{"location":"v4/api/color/#color-tools","title":"Color tools","text":"<pre><code>hex_to_rgba(hex)\nhsv_to_rgb(hue, sat, val, alpha: int) -&gt; tuple[int, int, int, int]\n</code></pre>"},{"location":"v4/api/fonts/","title":"Font API","text":"<pre><code>NUNITO_LIGHT\nSAIRACONDENSED_EXTRABOLD\n</code></pre>"},{"location":"v4/api/keys/","title":"Keys API","text":"<pre><code>KEY_UNKNOWN = pg.K_UNKNOWN\nKEY_RETURN = pg.K_RETURN\nKEY_ESCAPE = pg.K_ESCAPE\nKEY_BACKSPACE = pg.K_BACKSPACE\nKEY_TAB = pg.K_TAB\nKEY_SPACE = pg.K_SPACE\nKEY_EXCLAIM = pg.K_EXCLAIM\nKEY_QUOTEDBL = pg.K_QUOTEDBL\nKEY_HASH = pg.K_HASH\nKEY_PERCENT = pg.K_PERCENT\nKEY_DOLLAR = pg.K_DOLLAR\nKEY_AMPERSAND = pg.K_AMPERSAND\nKEY_QUOTE = pg.K_QUOTE\nKEY_LEFTPAREN = pg.K_LEFTPAREN\nKEY_RIGHTPAREN = pg.K_RIGHTPAREN\nKEY_ASTERISK = pg.K_ASTERISK\nKEY_PLUS = pg.K_PLUS\nKEY_COMMA = pg.K_COMMA\nKEY_MINUS = pg.K_MINUS\nKEY_PERIOD = pg.K_PERIOD\nKEY_SLASH = pg.K_SLASH\nKEY_0 = pg.K_0\nKEY_1 = pg.K_1\nKEY_2 = pg.K_2\nKEY_3 = pg.K_3\nKEY_4 = pg.K_4\nKEY_5 = pg.K_5\nKEY_6 = pg.K_6\nKEY_7 = pg.K_7\nKEY_8 = pg.K_8\nKEY_9 = pg.K_9\nKEY_COLON = pg.K_COLON\nKEY_SEMICOLON = pg.K_SEMICOLON\nKEY_LESS = pg.K_LESS\nKEY_EQUALS = pg.K_EQUALS\nKEY_GREATER = pg.K_GREATER\nKEY_QUESTION = pg.K_QUESTION\nKEY_AT = pg.K_AT\nKEY_LEFTBRACKET = pg.K_LEFTBRACKET\nKEY_BACKSLASH = pg.K_BACKSLASH\nKEY_RIGHTBRACKET = pg.K_RIGHTBRACKET\nKEY_CARET = pg.K_CARET\nKEY_UNDERSCORE = pg.K_UNDERSCORE\nKEY_BACKQUOTE = pg.K_BACKQUOTE\nKEY_a = pg.K_a\nKEY_b = pg.K_b\nKEY_c = pg.K_c\nKEY_d = pg.K_d\nKEY_e = pg.K_e\nKEY_f = pg.K_f\nKEY_g = pg.K_g\nKEY_h = pg.K_h\nKEY_i = pg.K_i\nKEY_j = pg.K_j\nKEY_k = pg.K_k\nKEY_l = pg.K_l\nKEY_m = pg.K_m\nKEY_n = pg.K_n\nKEY_o = pg.K_o\nKEY_p = pg.K_p\nKEY_q = pg.K_q\nKEY_r = pg.K_r\nKEY_s = pg.K_s\nKEY_t = pg.K_t\nKEY_u = pg.K_u\nKEY_v = pg.K_v\nKEY_w = pg.K_w\nKEY_x = pg.K_x\nKEY_y = pg.K_y\nKEY_z = pg.K_z\nKEY_CAPSLOCK = pg.K_CAPSLOCK\nKEY_F1 = pg.K_F1\nKEY_F2 = pg.K_F2\nKEY_F3 = pg.K_F3\nKEY_F4 = pg.K_F4\nKEY_F5 = pg.K_F5\nKEY_F6 = pg.K_F6\nKEY_F7 = pg.K_F7\nKEY_F8 = pg.K_F8\nKEY_F9 = pg.K_F9\nKEY_F10 = pg.K_F10\nKEY_F11 = pg.K_F11\nKEY_F12 = pg.K_F12\nKEY_PRINTSCREEN = pg.K_PRINT\nKEY_SCROLLLOCK = pg.K_SCROLLLOCK\nKEY_PAUSE = pg.K_PAUSE\nKEY_INSERT = pg.K_INSERT\nKEY_HOME = pg.K_HOME\nKEY_PAGEUP = pg.K_PAGEUP\nKEY_DELETE = pg.K_DELETE\nKEY_END = pg.K_END\nKEY_PAGEDOWN = pg.K_PAGEDOWN\nKEY_RIGHT = pg.K_RIGHT\nKEY_LEFT = pg.K_LEFT\nKEY_DOWN = pg.K_DOWN\nKEY_UP = pg.K_UP\nKEY_NUMLOCKCLEAR = pg.K_NUMLOCK\nKEY_KP_DIVIDE = pg.K_KP_DIVIDE\nKEY_KP_MULTIPLY = pg.K_KP_MULTIPLY\nKEY_KP_MINUS = pg.K_KP_MINUS\nKEY_KP_PLUS = pg.K_KP_PLUS\nKEY_KP_ENTER = pg.K_KP_ENTER\nKEY_KP_1 = pg.K_KP1\nKEY_KP_2 = pg.K_KP2\nKEY_KP_3 = pg.K_KP3\nKEY_KP_4 = pg.K_KP4\nKEY_KP_5 = pg.K_KP5\nKEY_KP_6 = pg.K_KP6\nKEY_KP_7 = pg.K_KP7\nKEY_KP_8 = pg.K_KP8\nKEY_KP_9 = pg.K_KP9\nKEY_KP_0 = pg.K_KP0\nKEY_KP_PERIOD = pg.K_KP_PERIOD\nKEY_POWER = pg.K_POWER\nKEY_KP_EQUALS = pg.K_KP_EQUALS\nKEY_F13 = pg.K_F13\nKEY_F14 = pg.K_F14\nKEY_F15 = pg.K_F15\nKEY_HELP = pg.K_HELP\nKEY_MENU = pg.K_MENU\nKEY_SYSREQ = pg.K_SYSREQ\nKEY_CLEAR = pg.K_CLEAR\nKEY_CURRENCYUNIT = pg.K_CURRENCYUNIT\nKEY_CURRENCYSUBUNIT = pg.K_CURRENCYSUBUNIT\nKEY_LCTRL = pg.K_LCTRL\nKEY_LSHIFT = pg.K_LSHIFT\nKEY_LALT = pg.K_LALT\nKEY_LGUI = pg.K_LMETA\nKEY_RCTRL = pg.K_RCTRL\nKEY_RSHIFT = pg.K_RSHIFT\nKEY_RALT = pg.K_RALT\nKEY_RGUI = pg.K_RMETA\nKEY_MODE = pg.K_MODE\nKEY_AC_BACK = pg.K_AC_BACK\n</code></pre>"},{"location":"v4/tutorials/","title":"Fusion engine tutorials","text":"<p>Welcome to our tutorials! Here you will find step by step tutorials so you can understand fusion engine better! There are couple tutorials to get you started with basics and some are more advanced so you can create your first game with ease!</p>"},{"location":"v4/tutorials/#table-of-contents","title":"Table of contents","text":"<ul> <li>Tutorial 1: Setting Everything Up</li> <li>Tutorial 2: Basic Rendering</li> </ul>"},{"location":"v4/tutorials/#tutorial-1-setting-everything-up","title":"Tutorial 1: Setting Everything Up","text":"<p>This tutorial is about setting up fusion-engine so you can work on your project. Have fun! Start your journey: Tutorial 1</p>"},{"location":"v4/tutorials/#tutorial-2-basic-rendering","title":"Tutorial 2: Basic Rendering","text":"<p>In this tutorial we're covering the basics like creating a window and rendering a image. Before this tutorial, make sure you have everything setup, if not you can follow tutorial-1. Have fun! Start your journey: Tutorial 2</p>"},{"location":"v4/tutorials/basics/","title":"Basic rendering tutorial","text":""},{"location":"v4/tutorials/basics/#introduction","title":"Introduction","text":"<p>This is a tutorial so you would understand the basics of the engine and how it works. In this tutorial we will learn how to render a window and draw some images on it. If you want to learn more, then go to our docs and select wiki.</p> <p>This tutorial also expect you to have everything setup, if not, head over to tutorial 1: setting everything up</p> <p>The Final Product Should Look like This: </p>"},{"location":"v4/tutorials/basics/#creating-a-window","title":"Creating a window","text":"<p>So if you read tutorial 1 you know we have the main variable running our engine object. So now we create a window with the help of that main object:</p> <pre><code>window = fusion.Window(\"Tutorial 2\", 600, 600)\n</code></pre> <p>The first argument that we give our function is our title, second argument is our width and third one is height</p>"},{"location":"v4/tutorials/basics/#pre-loading-image","title":"Pre-loading image","text":"<p>We will now pre-load a image so we can draw it later on our window. We do it like this:</p> <pre><code>image = fusion.Image(window, fusion.DEBUGIMAGE, 0, 0, 600, 600)\n</code></pre> <p>Fist argument is our window, second is our image path, third is our x position, fourth is our y position, fifth is our width and sixth is our height. As you maybe see were using fusion.DEBUGIMAGE, which is a build in image into our engine for testing purposes. We will use it for our tutorial</p>"},{"location":"v4/tutorials/basics/#starting-a-loop","title":"Starting a loop","text":"<p>A loop is basicly what lets our window be open the whole time and not be automaticly closed. You also run there functions that need to ran every frame. So we start a loop like this:</p> <pre><code>@window.loop\ndef loop():\n    ... # Code goes here\n\n</code></pre>"},{"location":"v4/tutorials/basics/#drawing-image","title":"Drawing image","text":"<p>So we still need to draw our image after loading it, and you can do that easily inside a loop like this:</p> <pre><code>@main.window.loop\ndef loop():\n    image.draw()\n\n</code></pre> <p>As you see we have a draw function in our loop with the image loaded image as base (object).</p>"},{"location":"v4/tutorials/basics/#full-code","title":"Full code","text":"<p>Here is our full code that we could through this tutorial:</p> <pre><code>import fusionengine as fusion\n\nwindow = fusion.Window(\"Example: 1\", 600, 600)\nimage = fusion.Image(window, fusion.DEBUGIMAGE, 0, 0, 600, 600)\n\n\n@window.loop\ndef loop():\n    image.draw()\n\n</code></pre>"},{"location":"v4/tutorials/basics/#ending","title":"Ending","text":"<p>This was our basic tutorial to images. There are (or will be) more tutorials, so check them our. Or otherwise you could check our docs for more information. Happy coding!</p>"},{"location":"v4/tutorials/platformer/","title":"Platformer tutorial","text":"<p>This is a tutorial how to build a basic platformer using fusion-engine</p>"},{"location":"v4/tutorials/setup/","title":"Setting everything up","text":""},{"location":"v4/tutorials/setup/#introduction","title":"Introduction","text":"<p>Welcome to our fusion-engine tutorials! Here you can learn about our engine and how to use it! This will go easy over everything you need to know to start programming with fusion!</p> <p>So this tutorial is made to setup everything, so you can start programming with fusion-engine! But if you already have everything setup then head over to tutorial 2: basic rendering</p>"},{"location":"v4/tutorials/setup/#installing","title":"Installing","text":"<p>So firstly we need to install fusion-engine. We have our package hoster at pypi so you can easly install it by running:</p> <pre><code>  pip install fusion-engine\n</code></pre>"},{"location":"v4/tutorials/setup/#importing","title":"Importing","text":"<p>Now we need to import fusion-engine to our project. We do it like this:</p> <pre><code>  import fusionengine as fusion\n</code></pre>"},{"location":"v4/tutorials/setup/#ending","title":"Ending","text":"<p>That was it, our engine is now setup! Now every function works from our main variable, as you might see later.</p>"},{"location":"v4/wiki/","title":"Wiki","text":"<p>Welcome to our wiki! Here you will find all function with their small explanaion and how to use them. We have seperated the wiki in some parts, like main wiki, color wiki and more. You choose one you need. Can't find something? Then try looking in the main wiki! So good luck!</p>"},{"location":"v4/wiki/#table-of-contents","title":"Table of contents","text":"<ul> <li>Main Wiki</li> <li>External tools Wiki</li> <li>Color Wiki</li> <li>Font Wiki</li> <li>Key Wiki</li> <li>Math Wiki</li> </ul>"},{"location":"v4/wiki/color/","title":"Color","text":""},{"location":"v4/wiki/color/#using-colors","title":"Using colors","text":"<p>Our engine has some build in predefined colors so it's a bit easier for you with colors, to acess the colors you run:</p> <pre><code>fusion.WHITE\n</code></pre>"},{"location":"v4/wiki/color/#all-colors","title":"All colors","text":"<p>The color name is always capitalised as per PEP 8 \u2192 Constants. All colors are defined and named (with capitalised form) as per Sublime Text \u2192 Docs \u2192 Color Schemes \u2192 Appendix - CSS Colors.</p>"},{"location":"v4/wiki/color/#custom-color","title":"Custom color","text":"<p>If you want your own color, you just give your function a tuple argument with RGBA colors, here is an example:</p> <pre><code>fusion.draw_rect(window, 100, 100, 400, 400, (255, 255, 255, 0))\n</code></pre>"},{"location":"v4/wiki/color/#hex-to-rgba","title":"Hex to rgba","text":"<p>If you have a hex color and want to convert it to rgba you can use this function:</p> <pre><code>fusion.hex_to_rgba(hex)\n</code></pre>"},{"location":"v4/wiki/color/#hsv-to-rgb","title":"HSV to RGB","text":"<p>If you have a HSV color and want to convert it to RGB you can use this function:</p> <pre><code>fusion.hsv_to_rgb(h, s, v)\n</code></pre> <p>hsv_to_rgb(hue, sat, val, alpha) -&gt; tuple[int, int, int, int]</p>"},{"location":"v4/wiki/external/","title":"External tools","text":""},{"location":"v4/wiki/external/#using-pygame","title":"Using pygame","text":"<p>If you cant find some function you need in this engine, the you could use pygame as the engine is build on pygame. You dont need to import pygame, as that can make some issues, you just use:</p> <pre><code>fusion.pg\n</code></pre>"},{"location":"v4/wiki/external/#using-pygame_1","title":"Using pygame","text":"<p>If you cant find some gui functions, you can use pygame gui, as the engine is using pygame_gui library. You dont need to import pygame gui, as that can make some issues, you just use:</p> <pre><code>fusion.gui\n</code></pre>"},{"location":"v4/wiki/external/#using-codon-compiler","title":"Using Codon Compiler","text":"<p>So you heard of codon, a python compiler with can compile your python code to machine code, which makes your code a lot faster But how do you use it? Well, its easy! You just install it and then modify these things in your code:</p> <p>Imports:</p> <pre><code>from python import fusionengine as fusion\n</code></pre> <p>Loop: You need to modify our loop to support codon, so you need to change it to this:</p> <pre><code>while your_window.running():\n    ... # Your own loop thing\n</code></pre> <p>You may reconise this type of while loop from the main wiki as your second option.</p>"},{"location":"v4/wiki/fonts/","title":"Fonts","text":""},{"location":"v4/wiki/fonts/#fonts","title":"Fonts","text":"<p>Our engine has some build in fonts, the following fonts are available:</p> <p>Nunito Sans Light:</p> <pre><code>fusion.NUNITO_LIGHT\n</code></pre> <p>Saira Condensed Extrabold:</p> <pre><code>fusion.SAIRACONDENSED_EXTRABOLD\n</code></pre> <p>There will be more fonts available in the future.</p>"},{"location":"v4/wiki/keys/","title":"Keys","text":""},{"location":"v4/wiki/keys/#keys","title":"Keys","text":"<p>We use Pygame for this, here are our key bindings to the sdl2 keys:</p> <pre><code>KEY_UNKNOWN = pg.K_UNKNOWN\nKEY_RETURN = pg.K_RETURN\nKEY_ESCAPE = pg.K_ESCAPE\nKEY_BACKSPACE = pg.K_BACKSPACE\nKEY_TAB = pg.K_TAB\nKEY_SPACE = pg.K_SPACE\nKEY_EXCLAIM = pg.K_EXCLAIM\nKEY_QUOTEDBL = pg.K_QUOTEDBL\nKEY_HASH = pg.K_HASH\nKEY_PERCENT = pg.K_PERCENT\nKEY_DOLLAR = pg.K_DOLLAR\nKEY_AMPERSAND = pg.K_AMPERSAND\nKEY_QUOTE = pg.K_QUOTE\nKEY_LEFTPAREN = pg.K_LEFTPAREN\nKEY_RIGHTPAREN = pg.K_RIGHTPAREN\nKEY_ASTERISK = pg.K_ASTERISK\nKEY_PLUS = pg.K_PLUS\nKEY_COMMA = pg.K_COMMA\nKEY_MINUS = pg.K_MINUS\nKEY_PERIOD = pg.K_PERIOD\nKEY_SLASH = pg.K_SLASH\nKEY_0 = pg.K_0\nKEY_1 = pg.K_1\nKEY_2 = pg.K_2\nKEY_3 = pg.K_3\nKEY_4 = pg.K_4\nKEY_5 = pg.K_5\nKEY_6 = pg.K_6\nKEY_7 = pg.K_7\nKEY_8 = pg.K_8\nKEY_9 = pg.K_9\nKEY_COLON = pg.K_COLON\nKEY_SEMICOLON = pg.K_SEMICOLON\nKEY_LESS = pg.K_LESS\nKEY_EQUALS = pg.K_EQUALS\nKEY_GREATER = pg.K_GREATER\nKEY_QUESTION = pg.K_QUESTION\nKEY_AT = pg.K_AT\nKEY_LEFTBRACKET = pg.K_LEFTBRACKET\nKEY_BACKSLASH = pg.K_BACKSLASH\nKEY_RIGHTBRACKET = pg.K_RIGHTBRACKET\nKEY_CARET = pg.K_CARET\nKEY_UNDERSCORE = pg.K_UNDERSCORE\nKEY_BACKQUOTE = pg.K_BACKQUOTE\nKEY_a = pg.K_a\nKEY_b = pg.K_b\nKEY_c = pg.K_c\nKEY_d = pg.K_d\nKEY_e = pg.K_e\nKEY_f = pg.K_f\nKEY_g = pg.K_g\nKEY_h = pg.K_h\nKEY_i = pg.K_i\nKEY_j = pg.K_j\nKEY_k = pg.K_k\nKEY_l = pg.K_l\nKEY_m = pg.K_m\nKEY_n = pg.K_n\nKEY_o = pg.K_o\nKEY_p = pg.K_p\nKEY_q = pg.K_q\nKEY_r = pg.K_r\nKEY_s = pg.K_s\nKEY_t = pg.K_t\nKEY_u = pg.K_u\nKEY_v = pg.K_v\nKEY_w = pg.K_w\nKEY_x = pg.K_x\nKEY_y = pg.K_y\nKEY_z = pg.K_z\nKEY_CAPSLOCK = pg.K_CAPSLOCK\nKEY_F1 = pg.K_F1\nKEY_F2 = pg.K_F2\nKEY_F3 = pg.K_F3\nKEY_F4 = pg.K_F4\nKEY_F5 = pg.K_F5\nKEY_F6 = pg.K_F6\nKEY_F7 = pg.K_F7\nKEY_F8 = pg.K_F8\nKEY_F9 = pg.K_F9\nKEY_F10 = pg.K_F10\nKEY_F11 = pg.K_F11\nKEY_F12 = pg.K_F12\nKEY_PRINTSCREEN = pg.K_PRINT\nKEY_SCROLLLOCK = pg.K_SCROLLLOCK\nKEY_PAUSE = pg.K_PAUSE\nKEY_INSERT = pg.K_INSERT\nKEY_HOME = pg.K_HOME\nKEY_PAGEUP = pg.K_PAGEUP\nKEY_DELETE = pg.K_DELETE\nKEY_END = pg.K_END\nKEY_PAGEDOWN = pg.K_PAGEDOWN\nKEY_RIGHT = pg.K_RIGHT\nKEY_LEFT = pg.K_LEFT\nKEY_DOWN = pg.K_DOWN\nKEY_UP = pg.K_UP\nKEY_NUMLOCKCLEAR = pg.K_NUMLOCK\nKEY_KP_DIVIDE = pg.K_KP_DIVIDE\nKEY_KP_MULTIPLY = pg.K_KP_MULTIPLY\nKEY_KP_MINUS = pg.K_KP_MINUS\nKEY_KP_PLUS = pg.K_KP_PLUS\nKEY_KP_ENTER = pg.K_KP_ENTER\nKEY_KP_1 = pg.K_KP1\nKEY_KP_2 = pg.K_KP2\nKEY_KP_3 = pg.K_KP3\nKEY_KP_4 = pg.K_KP4\nKEY_KP_5 = pg.K_KP5\nKEY_KP_6 = pg.K_KP6\nKEY_KP_7 = pg.K_KP7\nKEY_KP_8 = pg.K_KP8\nKEY_KP_9 = pg.K_KP9\nKEY_KP_0 = pg.K_KP0\nKEY_KP_PERIOD = pg.K_KP_PERIOD\nKEY_POWER = pg.K_POWER\nKEY_KP_EQUALS = pg.K_KP_EQUALS\nKEY_F13 = pg.K_F13\nKEY_F14 = pg.K_F14\nKEY_F15 = pg.K_F15\nKEY_HELP = pg.K_HELP\nKEY_MENU = pg.K_MENU\nKEY_SYSREQ = pg.K_SYSREQ\nKEY_CLEAR = pg.K_CLEAR\nKEY_CURRENCYUNIT = pg.K_CURRENCYUNIT\nKEY_CURRENCYSUBUNIT = pg.K_CURRENCYSUBUNIT\nKEY_LCTRL = pg.K_LCTRL\nKEY_LSHIFT = pg.K_LSHIFT\nKEY_LALT = pg.K_LALT\nKEY_LGUI = pg.K_LMETA\nKEY_RCTRL = pg.K_RCTRL\nKEY_RSHIFT = pg.K_RSHIFT\nKEY_RALT = pg.K_RALT\nKEY_RGUI = pg.K_RMETA\nKEY_MODE = pg.K_MODE\nKEY_AC_BACK = pg.K_AC_BACK\n</code></pre>"},{"location":"v4/wiki/math/","title":"Math","text":""},{"location":"v4/wiki/math/#types-of-pi-in-fusion-engine","title":"Types of PI in Fusion Engine","text":"<p>These are used for certain miscellaneous math things.</p> <p>Full version of pi (3.141592653589793238462643383279502884197):</p> <pre><code>    fusion.PI\n</code></pre> <p>A slightly smaller version that python's math library uses (3.141592653589793):</p> <pre><code>    fusion.SMALLERPI\n</code></pre> <p>An extremely shortened version of pi (3.14):</p> <pre><code>    fusion.SMALLPI\n</code></pre> <p>This allows you to get the floor value of a number.</p> <pre><code>  fusion.FLOOR(3.4)\n</code></pre>"},{"location":"v4/wiki/math/#eulers-number","title":"Euler's Number","text":"<p>You can read more about it here.</p> <pre><code>    fusion.EULERNUMBER\n</code></pre>"},{"location":"v4/wiki/wiki/","title":"Main Wiki","text":""},{"location":"v4/wiki/wiki/#create-window","title":"Create window","text":"<p>To create a window were thing are draw, then you need to use this:</p> <pre><code>your_window = fusion.Window(\"Example: 1\", 800, 600)\n</code></pre>"},{"location":"v4/wiki/wiki/#start-loop","title":"Start loop","text":"<p>In a loop you can draw things and it will run with the FPS that is setup. To start a loop, you have two choices:</p> <p>Choice 1:</p> <pre><code>@your_window.loop\ndef loop():\n    ... # Your own loop things\n</code></pre> <p>Choice 2:</p> <pre><code>while your_window.running():\n    ... # Your own loop thing\n\n</code></pre> <p>There is basically no difference, they all are doing the same thing, you use what you prefer. In our examples we use choice 1.</p>"},{"location":"v4/wiki/wiki/#default-message","title":"Default message","text":"<p>If you tried using our engine you may have encountered this message being printed to terminal:</p> <pre><code>Fusion Engine 1.0.2 (Pygame-ce 2.3.0, Python 3.11.4)\nWelcome to Fusion Engine! https://github.com/dimkauzh/fusion-engine\n</code></pre> <p>To disable this behavior, you just give the main class when initting this argument, set your \"FUSION_HIDE_PROMPT\" enviorment variable to \"no\".</p>"},{"location":"v4/wiki/wiki/#set-background-color","title":"Set Background color","text":"<p>If you want to set a background color, you use this function before all draw functions:</p> <pre><code>fusion.set_background_color(window, fusion.WHITE)\n</code></pre>"},{"location":"v4/wiki/wiki/#deltatime","title":"DeltaTime","text":"<p>if you want to access delta time, you use this:</p> <pre><code>your_window.DELTATIME\n</code></pre>"},{"location":"v4/wiki/wiki/#predefined-shapes","title":"Predefined shapes","text":"<p>We have some predefined shapes that can be used and be drew on the screen. Here are some:</p> <p>Rectangle:</p> <pre><code>your_shape = fusion.Rect(window, x, y, width, height, color)\n</code></pre>"},{"location":"v4/wiki/wiki/#drawing-the-shape","title":"Drawing the shape","text":"<p>To draw your shape, you use this:</p> <pre><code>your_shape.draw()\n</code></pre> <ul> <li>More shapes will be coming soon</li> </ul>"},{"location":"v4/wiki/wiki/#window-icon","title":"Window icon","text":"<p>So you want to change the icon of your window? Well, its easy:</p> <pre><code>your_window.change_icon(\"path_to_icon\")\n</code></pre>"},{"location":"v4/wiki/wiki/#set-fps","title":"Set FPS","text":"<p>To set the framerate of your window, you use this:</p> <pre><code>your_window.set_fps(60)\n\n</code></pre>"},{"location":"v4/wiki/wiki/#vectors","title":"Vectors","text":""},{"location":"v4/wiki/wiki/#vector2d","title":"Vector2d","text":"<p>If you want to create a 2d vector that stores x and y, then you do this:</p> <pre><code>vector = fusion.Vector2D(10, 10)\n</code></pre>"},{"location":"v4/wiki/wiki/#draw-a-line","title":"Draw a line","text":"<p>To draw a line, you use this:</p> <pre><code>#                        x1   y1   x2   y2      color\nfusion.draw_line(window, 100, 100, 200, 200, fusion.BLUE)\n</code></pre>"},{"location":"v4/wiki/wiki/#draw-rectangle","title":"Draw rectangle","text":"<p>If you just want to draw a rectangle to test or to use it for your game/app, then you have 3 options:</p> <p>Option one: just draw a rectangle</p> <pre><code>#                         x    y    w    h      color\nfusion.draw_rect(window, 100, 100, 400, 400, fusion.BLUE)\n</code></pre> <p>Third option: Draw a rectangle of lines</p> <pre><code>#                              x    y    w    h      color\nfusion.draw_line_rect(window, 100, 100, 400, 400, fusion.BLUE)\n</code></pre>"},{"location":"v4/wiki/wiki/#draw-image","title":"Draw image","text":"<p>You first need to create a variable with your image and image data:</p> <pre><code>your_image = fusion.Image(window, fusion.DEBUGIMAGE, 100, 100, 400, 400)\n</code></pre> <p>main.DEBUGIMAGE is an image that is included with the engine, so you can use it freely. Then you need to render it (In the best situation this will happen in your loop):</p> <pre><code>your_image.draw()\n</code></pre>"},{"location":"v4/wiki/wiki/#create-entity-warning-pre-alpha-its-in-really-early-stages","title":"Create entity WARNING: PRE ALPHA (It's in really early stages)","text":"<p>If you want a player or an enemy or some moving object in your game, you can use an entity, thats an object that helps you manage things in your game:</p> <pre><code>#                                    x    y    w   h\nyour_entity = fusion.Entity(window, 100, 100, 50, 50)\n</code></pre>"},{"location":"v4/wiki/wiki/#draw-rect-with-entity","title":"Draw rect with entity","text":"<p>If you want to draw a rectangle that is basically in your entity, then you do it like this:</p> <pre><code>your_entity.load_rect(fusion.BLACK)\n</code></pre> <p>Then you can draw it with:</p> <pre><code>your_entity.draw_rect()\n</code></pre>"},{"location":"v4/wiki/wiki/#draw-image-with-entity","title":"Draw image with entity","text":"<p>If you want to draw a image on your entity, then you do this:</p> <pre><code>your_entity.load_image(\"image_path\")\n</code></pre> <p>Then you can draw it with:</p> <pre><code>your_entity.draw_image()\n</code></pre>"},{"location":"v4/wiki/wiki/#sound","title":"Sound","text":""},{"location":"v4/wiki/wiki/#load-sound","title":"Load sound","text":"<p>To load a sound you do this:</p> <pre><code>your_sound = fusion.Sound(\"path_to_sound\")\n</code></pre>"},{"location":"v4/wiki/wiki/#play-sound","title":"Play sound","text":"<p>To play your loaded sound you use this:</p> <pre><code>your_sound.play()\n</code></pre>"},{"location":"v4/wiki/wiki/#stop-sound","title":"Stop sound","text":"<p>To stop your playing sound you use this:</p> <pre><code>your_sound.stop()\n</code></pre>"},{"location":"v4/wiki/wiki/#get-volume","title":"Get volume","text":"<p>To get the volume of your sound you use this:</p> <pre><code>your_sound.get_volume()\n</code></pre>"},{"location":"v4/wiki/wiki/#set-volume","title":"Set volume","text":"<p>To set the volume of your sound you use this:</p> <pre><code>your_sound.set_volume(0.5)\n</code></pre>"},{"location":"v4/wiki/wiki/#fadeout","title":"Fadeout","text":"<p>To fadeout your sound you use this:</p> <pre><code>your_sound.fadeout(1000)\n</code></pre>"},{"location":"v4/wiki/wiki/#backround-music","title":"Backround music","text":"<p>To start playing background music you use this:</p> <pre><code>your_backgroundmusic = fusion.BackgroundMusic(\"path_to_sound\")\n</code></pre>"},{"location":"v4/wiki/wiki/#set-background-music-volume","title":"Set background music volume","text":"<p>To set the volume of your background music you use this:</p> <pre><code>your_backgroundmusic.set_volume(0.5)\n</code></pre>"},{"location":"v4/wiki/wiki/#storage-system","title":"Storage system","text":""},{"location":"v4/wiki/wiki/#init","title":"Init","text":"<pre><code>my_db = fusion.JsonStorage(\"my_db.json\")\n</code></pre> <p>This how you initialize your json storage system</p>"},{"location":"v4/wiki/wiki/#insertion","title":"Insertion","text":"<pre><code>my_db.insert({\"first_name\": \"john\", \"last_name\": \"wick\", \"gold\": 50})\nmy_db.insert({\"first_name\": \"alexander\", \"last_name\": \"wick\", \"gold\": 20})\n</code></pre> <p>The code inserts two entries into the storage. The inserted data contains information about individuals' first names, last names, and gold amounts.</p>"},{"location":"v4/wiki/wiki/#reading","title":"Reading","text":"<pre><code>Copy code\nmy_db.search({\"last_name\": \"wick\"})\nmy_db.search({\"last_name\": \"wick\"}, get_index=True)\n</code></pre> <p>The code demonstrates reading operations. It searches for entries with the last name \"wick\" and retrieves results with and without index information.</p>"},{"location":"v4/wiki/wiki/#updating","title":"Updating","text":"<pre><code>alex['gold'] += 20\nmy_db.update(alex_index, alex)\n</code></pre> <p>The code showcases how to update data in the storage. In this case, it increases the \"gold\" value for an entry with the first name \"alexander\" by 20.</p>"},{"location":"v4/wiki/wiki/#deleting","title":"Deleting","text":"<pre><code>my_db.delete(john_index)\n</code></pre> <p>The code demonstrates deletion of data by removing an entry with the first name \"john\" from the storage.</p>"},{"location":"v4/wiki/wiki/#saving-to-disk","title":"Saving to Disk","text":"<pre><code>my_db.save()\n</code></pre> <p>The code shows how to save the modified data back to the storage file on disk.</p>"},{"location":"v4/wiki/wiki/#keyboard-input","title":"Keyboard input","text":""},{"location":"v4/wiki/wiki/#keydown","title":"Keydown","text":"<p>if you need keyboard input, then use this if statement with your own key (see key tab for all key names):</p> <pre><code> if fusion.key_down(fusion.KEY_a):\n     print(\"Key A pressed\")\n</code></pre>"},{"location":"v4/wiki/wiki/#keydown-once","title":"Keydown once","text":"<p>If you need keydown to be only once, then you use this:</p> <pre><code>if fusion.key_down_once(fusion.KEY_a):\n    print(\"Key A pressed\")\n</code></pre>"},{"location":"v4/wiki/wiki/#user-interface-ui","title":"User Interface (UI)","text":"<p>Creating a small ui for your application/game is easy with our following tools:</p>"},{"location":"v4/wiki/wiki/#buttons","title":"Buttons","text":"<p>To create a simple button we do the following:</p> <pre><code>\n# Create the button outside the loop\nyour_button = fusion.Button(\n    fusion.Rect(200, 200, 200, 200),\n    \"Hello World\"\n)\n\n</code></pre>"},{"location":"v4/wiki/wiki/#button-clicked","title":"Button clicked","text":"<p>If you want to check if your button was pressed or is being pressed, then you do that this way:</p> <pre><code>@main.window.loop\ndef loop():\n    if your_button.button_pressed():\n        ... # Do your stuff\n</code></pre>"},{"location":"v4/wiki/wiki/#rendering-text","title":"Rendering text","text":"<p>If you want to render some fonts, then you can do it like this:</p> <ul> <li>Option 1: Render text with build into fusion or your own font</li> </ul> <pre><code>#                                 x   y         font          size    color\nfusion.Text(window, \"Your text\", 10, 10, fusion.NUNITO_LIGHT, 20, fusion.WHITE)\n</code></pre> <ul> <li>Option 2: Render text with system font Its the same option 1, but you change the font to name of the font, like this:</li> </ul> <pre><code>fusion.Text(window, \"Your text\", 10, 10, \"Arial\", 20, main.color.WHITE)\n</code></pre>"},{"location":"v4/wiki/wiki/#quit","title":"Quit","text":"<p>The quitting of the engine is done automaticly for you, so you dont have to worry about it.</p>"},{"location":"v4/wiki/wiki/#force-to-quit","title":"Force to quit","text":"<p>If you want to force quit due to some reason, its pretty easy:</p> <pre><code>your_window.force_quit()\n</code></pre>"}]}